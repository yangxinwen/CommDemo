// Generated by the protocol buffer compiler.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace DuiContract {
  
  public static partial class ECallModel {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_DuiContract_RequestBase__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RequestBase, global::DuiContract.RequestBase.Builder> internal__static_DuiContract_RequestBase__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ResponseBase__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ResponseBase, global::DuiContract.ResponseBase.Builder> internal__static_DuiContract_ResponseBase__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqAddUserPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqAddUserPhone, global::DuiContract.ReqAddUserPhone.Builder> internal__static_DuiContract_ReqAddUserPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_UserPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.UserPhone, global::DuiContract.UserPhone.Builder> internal__static_DuiContract_UserPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspAddUserPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspAddUserPhone, global::DuiContract.RspAddUserPhone.Builder> internal__static_DuiContract_RspAddUserPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspCallStep__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspCallStep, global::DuiContract.RspCallStep.Builder> internal__static_DuiContract_RspCallStep__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_SIPStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.SIPStatus, global::DuiContract.SIPStatus.Builder> internal__static_DuiContract_SIPStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqSIPStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqSIPStatus, global::DuiContract.ReqSIPStatus.Builder> internal__static_DuiContract_ReqSIPStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspSIPStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspSIPStatus, global::DuiContract.RspSIPStatus.Builder> internal__static_DuiContract_RspSIPStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqSetSIPStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqSetSIPStatus, global::DuiContract.ReqSetSIPStatus.Builder> internal__static_DuiContract_ReqSetSIPStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqCallPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqCallPhone, global::DuiContract.ReqCallPhone.Builder> internal__static_DuiContract_ReqCallPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqHangup__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqHangup, global::DuiContract.ReqHangup.Builder> internal__static_DuiContract_ReqHangup__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspCallEnd__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspCallEnd, global::DuiContract.RspCallEnd.Builder> internal__static_DuiContract_RspCallEnd__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqNotPlayPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqNotPlayPhone, global::DuiContract.ReqNotPlayPhone.Builder> internal__static_DuiContract_ReqNotPlayPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspNotPlayPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspNotPlayPhone, global::DuiContract.RspNotPlayPhone.Builder> internal__static_DuiContract_RspNotPlayPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqDelPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqDelPhone, global::DuiContract.ReqDelPhone.Builder> internal__static_DuiContract_ReqDelPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspDelPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspDelPhone, global::DuiContract.RspDelPhone.Builder> internal__static_DuiContract_RspDelPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqOld__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqOld, global::DuiContract.ReqOld.Builder> internal__static_DuiContract_ReqOld__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspOld__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspOld, global::DuiContract.RspOld.Builder> internal__static_DuiContract_RspOld__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_FailUserPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.FailUserPhone, global::DuiContract.FailUserPhone.Builder> internal__static_DuiContract_FailUserPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqFailUserPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqFailUserPhone, global::DuiContract.ReqFailUserPhone.Builder> internal__static_DuiContract_ReqFailUserPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspFailUserPhone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspFailUserPhone, global::DuiContract.RspFailUserPhone.Builder> internal__static_DuiContract_RspFailUserPhone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqSIPRealStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqSIPRealStatus, global::DuiContract.ReqSIPRealStatus.Builder> internal__static_DuiContract_ReqSIPRealStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_SIPRealStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.SIPRealStatus, global::DuiContract.SIPRealStatus.Builder> internal__static_DuiContract_SIPRealStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspSIPRealStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspSIPRealStatus, global::DuiContract.RspSIPRealStatus.Builder> internal__static_DuiContract_RspSIPRealStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_ReqOtherCompanyImp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqOtherCompanyImp, global::DuiContract.ReqOtherCompanyImp.Builder> internal__static_DuiContract_ReqOtherCompanyImp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspOtherCompanyImp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspOtherCompanyImp, global::DuiContract.RspOtherCompanyImp.Builder> internal__static_DuiContract_RspOtherCompanyImp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DuiContract_RspHeartbeats__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspHeartbeats, global::DuiContract.RspHeartbeats.Builder> internal__static_DuiContract_RspHeartbeats__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ECallModel() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChBFQ2FsbE1vZGVsLnByb3RvEgtEdWlDb250cmFjdCJxCgtSZXF1ZXN0QmFz" + 
          "ZRISCgpTZXF1ZW5jZUlkGAEgASgFEhEKCVNlc3Npb25JZBgCIAEoCRIPCgdG" + 
          "dW5Db2RlGAMgAigFEgwKBEJvZHkYBCABKAwSDAoESXNIURgFIAEoCBIOCgZV" + 
          "c2VySWQYBiABKAkijAEKDFJlc3BvbnNlQmFzZRISCgpTZXF1ZW5jZUlkGAEg" + 
          "ASgFEhEKCVNlc3Npb25JZBgCIAEoCRIPCgdGdW5Db2RlGAMgAigFEhUKDUV4" + 
          "ZWN1dGVSZXN1bHQYBCABKAgSEQoJUmVzdWx0TXNnGAUgASgJEgwKBEJvZHkY" + 
          "BiABKAwSDAoESXNIURgHIAEoCCJeCg9SZXFBZGRVc2VyUGhvbmUSDgoGTWFy" + 
          "a2VyGAEgASgJEikKCVVzZXJQaG9uZRgCIAMoCzIWLkR1aUNvbnRyYWN0LlVz" + 
          "ZXJQaG9uZRIQCghJc0FwcGVuZBgDIAEoCCIwCglVc2VyUGhvbmUSDgoGVXNl" + 
          "cklkGAEgASgJEhMKC1Bob25lTnVtYmVyGAIgASgJIh0KD1JzcEFkZFVzZXJQ" + 
          "aG9uZRIKCgJJZBgBIAEoBSKYAQoLUnNwQ2FsbFN0ZXASDAoEU2VhdBgBIAEo" + 
          "CRIOCgZVc2VySWQYAiABKAkSDAoEU3RlcBgDIAEoBRIMCgRUaW1lGAQgASgJ" + 
          "EhAKCENhbGxUeXBlGAUgASgFEg4KBkNhbGxlchgGIAEoCRIOCgZDYWxsZWQY" + 
          "ByABKAkSDAoESFdobxgIIAEoBRIPCgdDaGFubmVsGAkgASgJIj0KCVNJUFN0" + 
          "YXR1cxILCgNTSVAYASABKAkSEQoJVXNlU3RhdHVzGAIgASgFEhAKCElzUGF1" + 
          "c2VkGAMgASgIIhsKDFJlcVNJUFN0YXR1cxILCgNTSVAYASABKAkiOQoMUnNw" + 
          "U0lQU3RhdHVzEikKCVNJUFN0YXR1cxgBIAMoCzIWLkR1aUNvbnRyYWN0LlNJ" + 
          "UFN0YXR1cyIvCg9SZXFTZXRTSVBTdGF0dXMSCwoDU0lQGAEgASgJEg8KB0lz" + 
          "UGF1c2UYAiABKAgiKgoMUmVxQ2FsbFBob25lEgsKA1NJUBgBIAEoCRINCgVQ" + 
          "aG9uZRgCIAEoCSIpCglSZXFIYW5ndXASCwoDU0lQGAEgASgJEg8KB0NoYW5u" + 
          "ZWwYAiABKAkifwoKUnNwQ2FsbEVuZBILCgNDaDEYASABKAkSCwoDQ2gyGAIg" + 
          "ASgJEg4KBkNhbGxlchgDIAEoCRIOCgZDYWxsZWQYBCABKAkSCgoCVFMYBSAB" + 
          "KAkSCgoCVEUYBiABKAkSDQoFVGltZXMYByABKAUSEAoIQ2FsbFR5cGUYCCAB" + 
          "KAUiEQoPUmVxTm90UGxheVBob25lIjwKD1JzcE5vdFBsYXlQaG9uZRIpCglV" + 
          "c2VyUGhvbmUYASADKAsyFi5EdWlDb250cmFjdC5Vc2VyUGhvbmUiHAoLUmVx" + 
          "RGVsUGhvbmUSDQoFUGhvbmUYASADKAkiHAoLUnNwRGVsUGhvbmUSDQoFQ291" + 
          "bnQYASABKAUi6gEKBlJlcU9sZBIRCglQYXJhbUpTT04YASABKAwSFwoPUGFy" + 
          "YW1TdHJpbmdMaXN0GAIgASgMEhMKC1BhcmFtU3RyaW5nGAMgASgMEhIKClBh" + 
          "cmFtQnl0ZXMYBCABKAwSFQoNUGFyYW1CeXRlTGlzdBgFIAEoDBIOCgZNYXJr" + 
          "ZXIYBiABKAkSEAoISXNVc2VaaXAYByABKAgSEAoIVHJhbk5hbWUYCCABKAkS" + 
          "EAoIRnVuY3Rpb24YCSABKAkSDgoGQWN0aW9uGAogASgJEhAKCERCTWFya2Vy" + 
          "GAsgASgJEgwKBEpzb24YDCABKAki5AEKBlJzcE9sZBIVCg1FeGVjdXRlUmVz" + 
          "dWx0GAEgASgIEhEKCVJldHVybk1zZxgCIAEoCRIUCgxSZXR1cm5TdHJpbmcY" + 
          "AyABKAkSFQoNUmV0dXJuU3RyaW5ncxgEIAEoDBITCgtSZXR1cm5CeXRlcxgF" + 
          "IAEoDBIXCg9SZXR1cm5EYXRhVGFibGUYBiABKAwSFQoNUmV0dXJuRGF0YVNl" + 
          "dBgHIAEoDBIOCgZNYXJrZXIYCCABKAkSDQoFSXNaaXAYCSABKAgSDwoHWmlw" + 
          "VHlwZRgKIAEoCRIOCgZVc2VySWQYCyABKAkiRwoNRmFpbFVzZXJQaG9uZRIO" + 
          "CgZVc2VySWQYASABKAkSEwoLUGhvbmVOdW1iZXIYAiABKAkSEQoJRXJyb3JD" + 
          "b2RlGAMgASgFIhIKEFJlcUZhaWxVc2VyUGhvbmUiQQoQUnNwRmFpbFVzZXJQ" + 
          "aG9uZRItCglVc2VyUGhvbmUYASADKAsyGi5EdWlDb250cmFjdC5GYWlsVXNl" + 
          "clBob25lIhIKEFJlcVNJUFJlYWxTdGF0dXMibQoNU0lQUmVhbFN0YXR1cxIO" + 
          "CgZMaW5rTm8YASABKAkSCwoDU0lQGAIgASgJEhAKCElzUGF1c2VkGAMgASgI" + 
          "Eg4KBlN0YXR1cxgEIAEoBRIOCgZVcFRpbWUYBSABKAkSDQoFUGhvbmUYBiAB" + 
          "KAkiQgoQUnNwU0lQUmVhbFN0YXR1cxIuCgpSZWFsU3RhdHVzGAEgAygLMhou" + 
          "RHVpQ29udHJhY3QuU0lQUmVhbFN0YXR1cyJ+ChJSZXFPdGhlckNvbXBhbnlJ" + 
          "bXASFAoMUmVxQ29tcGFueUlkGAEgASgJEhQKDFJzcENvbXBhbnlJZBgCIAEo" + 
          "CRIRCglTZXNzaW9uSWQYAyABKAkSKQoHUmVxQm9keRgEIAEoCzIYLkR1aUNv" + 
          "bnRyYWN0LlJlcXVlc3RCYXNlImYKElJzcE90aGVyQ29tcGFueUltcBIRCglD" + 
          "b21wYW55SWQYASABKAkSEQoJU2Vzc2lvbklkGAIgASgJEioKB1JzcEJvZHkY" + 
          "AyABKAsyGS5EdWlDb250cmFjdC5SZXNwb25zZUJhc2UiHgoNUnNwSGVhcnRi" + 
          "ZWF0cxINCgVUaWNrcxgBIAEoBQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_DuiContract_RequestBase__Descriptor = Descriptor.MessageTypes[0];
        internal__static_DuiContract_RequestBase__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RequestBase, global::DuiContract.RequestBase.Builder>(internal__static_DuiContract_RequestBase__Descriptor,
                new string[] { "SequenceId", "SessionId", "FunCode", "Body", "IsHQ", "UserId", });
        internal__static_DuiContract_ResponseBase__Descriptor = Descriptor.MessageTypes[1];
        internal__static_DuiContract_ResponseBase__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ResponseBase, global::DuiContract.ResponseBase.Builder>(internal__static_DuiContract_ResponseBase__Descriptor,
                new string[] { "SequenceId", "SessionId", "FunCode", "ExecuteResult", "ResultMsg", "Body", "IsHQ", });
        internal__static_DuiContract_ReqAddUserPhone__Descriptor = Descriptor.MessageTypes[2];
        internal__static_DuiContract_ReqAddUserPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqAddUserPhone, global::DuiContract.ReqAddUserPhone.Builder>(internal__static_DuiContract_ReqAddUserPhone__Descriptor,
                new string[] { "Marker", "UserPhone", "IsAppend", });
        internal__static_DuiContract_UserPhone__Descriptor = Descriptor.MessageTypes[3];
        internal__static_DuiContract_UserPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.UserPhone, global::DuiContract.UserPhone.Builder>(internal__static_DuiContract_UserPhone__Descriptor,
                new string[] { "UserId", "PhoneNumber", });
        internal__static_DuiContract_RspAddUserPhone__Descriptor = Descriptor.MessageTypes[4];
        internal__static_DuiContract_RspAddUserPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspAddUserPhone, global::DuiContract.RspAddUserPhone.Builder>(internal__static_DuiContract_RspAddUserPhone__Descriptor,
                new string[] { "Id", });
        internal__static_DuiContract_RspCallStep__Descriptor = Descriptor.MessageTypes[5];
        internal__static_DuiContract_RspCallStep__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspCallStep, global::DuiContract.RspCallStep.Builder>(internal__static_DuiContract_RspCallStep__Descriptor,
                new string[] { "Seat", "UserId", "Step", "Time", "CallType", "Caller", "Called", "HWho", "Channel", });
        internal__static_DuiContract_SIPStatus__Descriptor = Descriptor.MessageTypes[6];
        internal__static_DuiContract_SIPStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.SIPStatus, global::DuiContract.SIPStatus.Builder>(internal__static_DuiContract_SIPStatus__Descriptor,
                new string[] { "SIP", "UseStatus", "IsPaused", });
        internal__static_DuiContract_ReqSIPStatus__Descriptor = Descriptor.MessageTypes[7];
        internal__static_DuiContract_ReqSIPStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqSIPStatus, global::DuiContract.ReqSIPStatus.Builder>(internal__static_DuiContract_ReqSIPStatus__Descriptor,
                new string[] { "SIP", });
        internal__static_DuiContract_RspSIPStatus__Descriptor = Descriptor.MessageTypes[8];
        internal__static_DuiContract_RspSIPStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspSIPStatus, global::DuiContract.RspSIPStatus.Builder>(internal__static_DuiContract_RspSIPStatus__Descriptor,
                new string[] { "SIPStatus", });
        internal__static_DuiContract_ReqSetSIPStatus__Descriptor = Descriptor.MessageTypes[9];
        internal__static_DuiContract_ReqSetSIPStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqSetSIPStatus, global::DuiContract.ReqSetSIPStatus.Builder>(internal__static_DuiContract_ReqSetSIPStatus__Descriptor,
                new string[] { "SIP", "IsPause", });
        internal__static_DuiContract_ReqCallPhone__Descriptor = Descriptor.MessageTypes[10];
        internal__static_DuiContract_ReqCallPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqCallPhone, global::DuiContract.ReqCallPhone.Builder>(internal__static_DuiContract_ReqCallPhone__Descriptor,
                new string[] { "SIP", "Phone", });
        internal__static_DuiContract_ReqHangup__Descriptor = Descriptor.MessageTypes[11];
        internal__static_DuiContract_ReqHangup__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqHangup, global::DuiContract.ReqHangup.Builder>(internal__static_DuiContract_ReqHangup__Descriptor,
                new string[] { "SIP", "Channel", });
        internal__static_DuiContract_RspCallEnd__Descriptor = Descriptor.MessageTypes[12];
        internal__static_DuiContract_RspCallEnd__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspCallEnd, global::DuiContract.RspCallEnd.Builder>(internal__static_DuiContract_RspCallEnd__Descriptor,
                new string[] { "Ch1", "Ch2", "Caller", "Called", "TS", "TE", "Times", "CallType", });
        internal__static_DuiContract_ReqNotPlayPhone__Descriptor = Descriptor.MessageTypes[13];
        internal__static_DuiContract_ReqNotPlayPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqNotPlayPhone, global::DuiContract.ReqNotPlayPhone.Builder>(internal__static_DuiContract_ReqNotPlayPhone__Descriptor,
                new string[] { });
        internal__static_DuiContract_RspNotPlayPhone__Descriptor = Descriptor.MessageTypes[14];
        internal__static_DuiContract_RspNotPlayPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspNotPlayPhone, global::DuiContract.RspNotPlayPhone.Builder>(internal__static_DuiContract_RspNotPlayPhone__Descriptor,
                new string[] { "UserPhone", });
        internal__static_DuiContract_ReqDelPhone__Descriptor = Descriptor.MessageTypes[15];
        internal__static_DuiContract_ReqDelPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqDelPhone, global::DuiContract.ReqDelPhone.Builder>(internal__static_DuiContract_ReqDelPhone__Descriptor,
                new string[] { "Phone", });
        internal__static_DuiContract_RspDelPhone__Descriptor = Descriptor.MessageTypes[16];
        internal__static_DuiContract_RspDelPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspDelPhone, global::DuiContract.RspDelPhone.Builder>(internal__static_DuiContract_RspDelPhone__Descriptor,
                new string[] { "Count", });
        internal__static_DuiContract_ReqOld__Descriptor = Descriptor.MessageTypes[17];
        internal__static_DuiContract_ReqOld__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqOld, global::DuiContract.ReqOld.Builder>(internal__static_DuiContract_ReqOld__Descriptor,
                new string[] { "ParamJSON", "ParamStringList", "ParamString", "ParamBytes", "ParamByteList", "Marker", "IsUseZip", "TranName", "Function", "Action", "DBMarker", "Json", });
        internal__static_DuiContract_RspOld__Descriptor = Descriptor.MessageTypes[18];
        internal__static_DuiContract_RspOld__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspOld, global::DuiContract.RspOld.Builder>(internal__static_DuiContract_RspOld__Descriptor,
                new string[] { "ExecuteResult", "ReturnMsg", "ReturnString", "ReturnStrings", "ReturnBytes", "ReturnDataTable", "ReturnDataSet", "Marker", "IsZip", "ZipType", "UserId", });
        internal__static_DuiContract_FailUserPhone__Descriptor = Descriptor.MessageTypes[19];
        internal__static_DuiContract_FailUserPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.FailUserPhone, global::DuiContract.FailUserPhone.Builder>(internal__static_DuiContract_FailUserPhone__Descriptor,
                new string[] { "UserId", "PhoneNumber", "ErrorCode", });
        internal__static_DuiContract_ReqFailUserPhone__Descriptor = Descriptor.MessageTypes[20];
        internal__static_DuiContract_ReqFailUserPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqFailUserPhone, global::DuiContract.ReqFailUserPhone.Builder>(internal__static_DuiContract_ReqFailUserPhone__Descriptor,
                new string[] { });
        internal__static_DuiContract_RspFailUserPhone__Descriptor = Descriptor.MessageTypes[21];
        internal__static_DuiContract_RspFailUserPhone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspFailUserPhone, global::DuiContract.RspFailUserPhone.Builder>(internal__static_DuiContract_RspFailUserPhone__Descriptor,
                new string[] { "UserPhone", });
        internal__static_DuiContract_ReqSIPRealStatus__Descriptor = Descriptor.MessageTypes[22];
        internal__static_DuiContract_ReqSIPRealStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqSIPRealStatus, global::DuiContract.ReqSIPRealStatus.Builder>(internal__static_DuiContract_ReqSIPRealStatus__Descriptor,
                new string[] { });
        internal__static_DuiContract_SIPRealStatus__Descriptor = Descriptor.MessageTypes[23];
        internal__static_DuiContract_SIPRealStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.SIPRealStatus, global::DuiContract.SIPRealStatus.Builder>(internal__static_DuiContract_SIPRealStatus__Descriptor,
                new string[] { "LinkNo", "SIP", "IsPaused", "Status", "UpTime", "Phone", });
        internal__static_DuiContract_RspSIPRealStatus__Descriptor = Descriptor.MessageTypes[24];
        internal__static_DuiContract_RspSIPRealStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspSIPRealStatus, global::DuiContract.RspSIPRealStatus.Builder>(internal__static_DuiContract_RspSIPRealStatus__Descriptor,
                new string[] { "RealStatus", });
        internal__static_DuiContract_ReqOtherCompanyImp__Descriptor = Descriptor.MessageTypes[25];
        internal__static_DuiContract_ReqOtherCompanyImp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.ReqOtherCompanyImp, global::DuiContract.ReqOtherCompanyImp.Builder>(internal__static_DuiContract_ReqOtherCompanyImp__Descriptor,
                new string[] { "ReqCompanyId", "RspCompanyId", "SessionId", "ReqBody", });
        internal__static_DuiContract_RspOtherCompanyImp__Descriptor = Descriptor.MessageTypes[26];
        internal__static_DuiContract_RspOtherCompanyImp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspOtherCompanyImp, global::DuiContract.RspOtherCompanyImp.Builder>(internal__static_DuiContract_RspOtherCompanyImp__Descriptor,
                new string[] { "CompanyId", "SessionId", "RspBody", });
        internal__static_DuiContract_RspHeartbeats__Descriptor = Descriptor.MessageTypes[27];
        internal__static_DuiContract_RspHeartbeats__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DuiContract.RspHeartbeats, global::DuiContract.RspHeartbeats.Builder>(internal__static_DuiContract_RspHeartbeats__Descriptor,
                new string[] { "Ticks", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class RequestBase : pb::GeneratedMessage<RequestBase, RequestBase.Builder> {
    private static readonly RequestBase defaultInstance = new Builder().BuildPartial();
    public static RequestBase DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RequestBase DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RequestBase ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RequestBase__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RequestBase, RequestBase.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RequestBase__FieldAccessorTable; }
    }
    
    public const int SequenceIdFieldNumber = 1;
    private bool hasSequenceId;
    private int sequenceId_ = 0;
    public bool HasSequenceId {
      get { return hasSequenceId; }
    }
    public int SequenceId {
      get { return sequenceId_; }
    }
    
    public const int SessionIdFieldNumber = 2;
    private bool hasSessionId;
    private string sessionId_ = "";
    public bool HasSessionId {
      get { return hasSessionId; }
    }
    public string SessionId {
      get { return sessionId_; }
    }
    
    public const int FunCodeFieldNumber = 3;
    private bool hasFunCode;
    private int funCode_ = 0;
    public bool HasFunCode {
      get { return hasFunCode; }
    }
    public int FunCode {
      get { return funCode_; }
    }
    
    public const int BodyFieldNumber = 4;
    private bool hasBody;
    private pb::ByteString body_ = pb::ByteString.Empty;
    public bool HasBody {
      get { return hasBody; }
    }
    public pb::ByteString Body {
      get { return body_; }
    }
    
    public const int IsHQFieldNumber = 5;
    private bool hasIsHQ;
    private bool isHQ_ = false;
    public bool HasIsHQ {
      get { return hasIsHQ; }
    }
    public bool IsHQ {
      get { return isHQ_; }
    }
    
    public const int UserIdFieldNumber = 6;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFunCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasSequenceId) {
        output.WriteInt32(1, SequenceId);
      }
      if (HasSessionId) {
        output.WriteString(2, SessionId);
      }
      if (HasFunCode) {
        output.WriteInt32(3, FunCode);
      }
      if (HasBody) {
        output.WriteBytes(4, Body);
      }
      if (HasIsHQ) {
        output.WriteBool(5, IsHQ);
      }
      if (HasUserId) {
        output.WriteString(6, UserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasSequenceId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, SequenceId);
        }
        if (HasSessionId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, SessionId);
        }
        if (HasFunCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, FunCode);
        }
        if (HasBody) {
          size += pb::CodedOutputStream.ComputeBytesSize(4, Body);
        }
        if (HasIsHQ) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, IsHQ);
        }
        if (HasUserId) {
          size += pb::CodedOutputStream.ComputeStringSize(6, UserId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RequestBase ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestBase ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestBase ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestBase ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestBase ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestBase ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RequestBase ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RequestBase ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RequestBase ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestBase ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RequestBase prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RequestBase, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RequestBase result = new RequestBase();
      
      protected override RequestBase MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RequestBase();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RequestBase.Descriptor; }
      }
      
      public override RequestBase DefaultInstanceForType {
        get { return global::DuiContract.RequestBase.DefaultInstance; }
      }
      
      public override RequestBase BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RequestBase returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RequestBase) {
          return MergeFrom((RequestBase) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RequestBase other) {
        if (other == global::DuiContract.RequestBase.DefaultInstance) return this;
        if (other.HasSequenceId) {
          SequenceId = other.SequenceId;
        }
        if (other.HasSessionId) {
          SessionId = other.SessionId;
        }
        if (other.HasFunCode) {
          FunCode = other.FunCode;
        }
        if (other.HasBody) {
          Body = other.Body;
        }
        if (other.HasIsHQ) {
          IsHQ = other.IsHQ;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              SequenceId = input.ReadInt32();
              break;
            }
            case 18: {
              SessionId = input.ReadString();
              break;
            }
            case 24: {
              FunCode = input.ReadInt32();
              break;
            }
            case 34: {
              Body = input.ReadBytes();
              break;
            }
            case 40: {
              IsHQ = input.ReadBool();
              break;
            }
            case 50: {
              UserId = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasSequenceId {
        get { return result.HasSequenceId; }
      }
      public int SequenceId {
        get { return result.SequenceId; }
        set { SetSequenceId(value); }
      }
      public Builder SetSequenceId(int value) {
        result.hasSequenceId = true;
        result.sequenceId_ = value;
        return this;
      }
      public Builder ClearSequenceId() {
        result.hasSequenceId = false;
        result.sequenceId_ = 0;
        return this;
      }
      
      public bool HasSessionId {
        get { return result.HasSessionId; }
      }
      public string SessionId {
        get { return result.SessionId; }
        set { SetSessionId(value); }
      }
      public Builder SetSessionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSessionId = true;
        result.sessionId_ = value;
        return this;
      }
      public Builder ClearSessionId() {
        result.hasSessionId = false;
        result.sessionId_ = "";
        return this;
      }
      
      public bool HasFunCode {
        get { return result.HasFunCode; }
      }
      public int FunCode {
        get { return result.FunCode; }
        set { SetFunCode(value); }
      }
      public Builder SetFunCode(int value) {
        result.hasFunCode = true;
        result.funCode_ = value;
        return this;
      }
      public Builder ClearFunCode() {
        result.hasFunCode = false;
        result.funCode_ = 0;
        return this;
      }
      
      public bool HasBody {
        get { return result.HasBody; }
      }
      public pb::ByteString Body {
        get { return result.Body; }
        set { SetBody(value); }
      }
      public Builder SetBody(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder ClearBody() {
        result.hasBody = false;
        result.body_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasIsHQ {
        get { return result.HasIsHQ; }
      }
      public bool IsHQ {
        get { return result.IsHQ; }
        set { SetIsHQ(value); }
      }
      public Builder SetIsHQ(bool value) {
        result.hasIsHQ = true;
        result.isHQ_ = value;
        return this;
      }
      public Builder ClearIsHQ() {
        result.hasIsHQ = false;
        result.isHQ_ = false;
        return this;
      }
      
      public bool HasUserId {
        get { return result.HasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
    }
    static RequestBase() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ResponseBase : pb::GeneratedMessage<ResponseBase, ResponseBase.Builder> {
    private static readonly ResponseBase defaultInstance = new Builder().BuildPartial();
    public static ResponseBase DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ResponseBase DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ResponseBase ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ResponseBase__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ResponseBase, ResponseBase.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ResponseBase__FieldAccessorTable; }
    }
    
    public const int SequenceIdFieldNumber = 1;
    private bool hasSequenceId;
    private int sequenceId_ = 0;
    public bool HasSequenceId {
      get { return hasSequenceId; }
    }
    public int SequenceId {
      get { return sequenceId_; }
    }
    
    public const int SessionIdFieldNumber = 2;
    private bool hasSessionId;
    private string sessionId_ = "";
    public bool HasSessionId {
      get { return hasSessionId; }
    }
    public string SessionId {
      get { return sessionId_; }
    }
    
    public const int FunCodeFieldNumber = 3;
    private bool hasFunCode;
    private int funCode_ = 0;
    public bool HasFunCode {
      get { return hasFunCode; }
    }
    public int FunCode {
      get { return funCode_; }
    }
    
    public const int ExecuteResultFieldNumber = 4;
    private bool hasExecuteResult;
    private bool executeResult_ = false;
    public bool HasExecuteResult {
      get { return hasExecuteResult; }
    }
    public bool ExecuteResult {
      get { return executeResult_; }
    }
    
    public const int ResultMsgFieldNumber = 5;
    private bool hasResultMsg;
    private string resultMsg_ = "";
    public bool HasResultMsg {
      get { return hasResultMsg; }
    }
    public string ResultMsg {
      get { return resultMsg_; }
    }
    
    public const int BodyFieldNumber = 6;
    private bool hasBody;
    private pb::ByteString body_ = pb::ByteString.Empty;
    public bool HasBody {
      get { return hasBody; }
    }
    public pb::ByteString Body {
      get { return body_; }
    }
    
    public const int IsHQFieldNumber = 7;
    private bool hasIsHQ;
    private bool isHQ_ = false;
    public bool HasIsHQ {
      get { return hasIsHQ; }
    }
    public bool IsHQ {
      get { return isHQ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFunCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasSequenceId) {
        output.WriteInt32(1, SequenceId);
      }
      if (HasSessionId) {
        output.WriteString(2, SessionId);
      }
      if (HasFunCode) {
        output.WriteInt32(3, FunCode);
      }
      if (HasExecuteResult) {
        output.WriteBool(4, ExecuteResult);
      }
      if (HasResultMsg) {
        output.WriteString(5, ResultMsg);
      }
      if (HasBody) {
        output.WriteBytes(6, Body);
      }
      if (HasIsHQ) {
        output.WriteBool(7, IsHQ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasSequenceId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, SequenceId);
        }
        if (HasSessionId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, SessionId);
        }
        if (HasFunCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, FunCode);
        }
        if (HasExecuteResult) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, ExecuteResult);
        }
        if (HasResultMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(5, ResultMsg);
        }
        if (HasBody) {
          size += pb::CodedOutputStream.ComputeBytesSize(6, Body);
        }
        if (HasIsHQ) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, IsHQ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ResponseBase ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResponseBase ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResponseBase ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResponseBase ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResponseBase ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResponseBase ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ResponseBase ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ResponseBase ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ResponseBase ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResponseBase ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ResponseBase prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ResponseBase, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ResponseBase result = new ResponseBase();
      
      protected override ResponseBase MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ResponseBase();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ResponseBase.Descriptor; }
      }
      
      public override ResponseBase DefaultInstanceForType {
        get { return global::DuiContract.ResponseBase.DefaultInstance; }
      }
      
      public override ResponseBase BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ResponseBase returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ResponseBase) {
          return MergeFrom((ResponseBase) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ResponseBase other) {
        if (other == global::DuiContract.ResponseBase.DefaultInstance) return this;
        if (other.HasSequenceId) {
          SequenceId = other.SequenceId;
        }
        if (other.HasSessionId) {
          SessionId = other.SessionId;
        }
        if (other.HasFunCode) {
          FunCode = other.FunCode;
        }
        if (other.HasExecuteResult) {
          ExecuteResult = other.ExecuteResult;
        }
        if (other.HasResultMsg) {
          ResultMsg = other.ResultMsg;
        }
        if (other.HasBody) {
          Body = other.Body;
        }
        if (other.HasIsHQ) {
          IsHQ = other.IsHQ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              SequenceId = input.ReadInt32();
              break;
            }
            case 18: {
              SessionId = input.ReadString();
              break;
            }
            case 24: {
              FunCode = input.ReadInt32();
              break;
            }
            case 32: {
              ExecuteResult = input.ReadBool();
              break;
            }
            case 42: {
              ResultMsg = input.ReadString();
              break;
            }
            case 50: {
              Body = input.ReadBytes();
              break;
            }
            case 56: {
              IsHQ = input.ReadBool();
              break;
            }
          }
        }
      }
      
      
      public bool HasSequenceId {
        get { return result.HasSequenceId; }
      }
      public int SequenceId {
        get { return result.SequenceId; }
        set { SetSequenceId(value); }
      }
      public Builder SetSequenceId(int value) {
        result.hasSequenceId = true;
        result.sequenceId_ = value;
        return this;
      }
      public Builder ClearSequenceId() {
        result.hasSequenceId = false;
        result.sequenceId_ = 0;
        return this;
      }
      
      public bool HasSessionId {
        get { return result.HasSessionId; }
      }
      public string SessionId {
        get { return result.SessionId; }
        set { SetSessionId(value); }
      }
      public Builder SetSessionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSessionId = true;
        result.sessionId_ = value;
        return this;
      }
      public Builder ClearSessionId() {
        result.hasSessionId = false;
        result.sessionId_ = "";
        return this;
      }
      
      public bool HasFunCode {
        get { return result.HasFunCode; }
      }
      public int FunCode {
        get { return result.FunCode; }
        set { SetFunCode(value); }
      }
      public Builder SetFunCode(int value) {
        result.hasFunCode = true;
        result.funCode_ = value;
        return this;
      }
      public Builder ClearFunCode() {
        result.hasFunCode = false;
        result.funCode_ = 0;
        return this;
      }
      
      public bool HasExecuteResult {
        get { return result.HasExecuteResult; }
      }
      public bool ExecuteResult {
        get { return result.ExecuteResult; }
        set { SetExecuteResult(value); }
      }
      public Builder SetExecuteResult(bool value) {
        result.hasExecuteResult = true;
        result.executeResult_ = value;
        return this;
      }
      public Builder ClearExecuteResult() {
        result.hasExecuteResult = false;
        result.executeResult_ = false;
        return this;
      }
      
      public bool HasResultMsg {
        get { return result.HasResultMsg; }
      }
      public string ResultMsg {
        get { return result.ResultMsg; }
        set { SetResultMsg(value); }
      }
      public Builder SetResultMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasResultMsg = true;
        result.resultMsg_ = value;
        return this;
      }
      public Builder ClearResultMsg() {
        result.hasResultMsg = false;
        result.resultMsg_ = "";
        return this;
      }
      
      public bool HasBody {
        get { return result.HasBody; }
      }
      public pb::ByteString Body {
        get { return result.Body; }
        set { SetBody(value); }
      }
      public Builder SetBody(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder ClearBody() {
        result.hasBody = false;
        result.body_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasIsHQ {
        get { return result.HasIsHQ; }
      }
      public bool IsHQ {
        get { return result.IsHQ; }
        set { SetIsHQ(value); }
      }
      public Builder SetIsHQ(bool value) {
        result.hasIsHQ = true;
        result.isHQ_ = value;
        return this;
      }
      public Builder ClearIsHQ() {
        result.hasIsHQ = false;
        result.isHQ_ = false;
        return this;
      }
    }
    static ResponseBase() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqAddUserPhone : pb::GeneratedMessage<ReqAddUserPhone, ReqAddUserPhone.Builder> {
    private static readonly ReqAddUserPhone defaultInstance = new Builder().BuildPartial();
    public static ReqAddUserPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqAddUserPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqAddUserPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqAddUserPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqAddUserPhone, ReqAddUserPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqAddUserPhone__FieldAccessorTable; }
    }
    
    public const int MarkerFieldNumber = 1;
    private bool hasMarker;
    private string marker_ = "";
    public bool HasMarker {
      get { return hasMarker; }
    }
    public string Marker {
      get { return marker_; }
    }
    
    public const int UserPhoneFieldNumber = 2;
    private pbc::PopsicleList<global::DuiContract.UserPhone> userPhone_ = new pbc::PopsicleList<global::DuiContract.UserPhone>();
    public scg::IList<global::DuiContract.UserPhone> UserPhoneList {
      get { return userPhone_; }
    }
    public int UserPhoneCount {
      get { return userPhone_.Count; }
    }
    public global::DuiContract.UserPhone GetUserPhone(int index) {
      return userPhone_[index];
    }
    
    public const int IsAppendFieldNumber = 3;
    private bool hasIsAppend;
    private bool isAppend_ = false;
    public bool HasIsAppend {
      get { return hasIsAppend; }
    }
    public bool IsAppend {
      get { return isAppend_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasMarker) {
        output.WriteString(1, Marker);
      }
      foreach (global::DuiContract.UserPhone element in UserPhoneList) {
        output.WriteMessage(2, element);
      }
      if (HasIsAppend) {
        output.WriteBool(3, IsAppend);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasMarker) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Marker);
        }
        foreach (global::DuiContract.UserPhone element in UserPhoneList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (HasIsAppend) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsAppend);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqAddUserPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqAddUserPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqAddUserPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqAddUserPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqAddUserPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqAddUserPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqAddUserPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqAddUserPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqAddUserPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqAddUserPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqAddUserPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqAddUserPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqAddUserPhone result = new ReqAddUserPhone();
      
      protected override ReqAddUserPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqAddUserPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqAddUserPhone.Descriptor; }
      }
      
      public override ReqAddUserPhone DefaultInstanceForType {
        get { return global::DuiContract.ReqAddUserPhone.DefaultInstance; }
      }
      
      public override ReqAddUserPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.userPhone_.MakeReadOnly();
        ReqAddUserPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqAddUserPhone) {
          return MergeFrom((ReqAddUserPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqAddUserPhone other) {
        if (other == global::DuiContract.ReqAddUserPhone.DefaultInstance) return this;
        if (other.HasMarker) {
          Marker = other.Marker;
        }
        if (other.userPhone_.Count != 0) {
          base.AddRange(other.userPhone_, result.userPhone_);
        }
        if (other.HasIsAppend) {
          IsAppend = other.IsAppend;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Marker = input.ReadString();
              break;
            }
            case 18: {
              global::DuiContract.UserPhone.Builder subBuilder = global::DuiContract.UserPhone.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddUserPhone(subBuilder.BuildPartial());
              break;
            }
            case 24: {
              IsAppend = input.ReadBool();
              break;
            }
          }
        }
      }
      
      
      public bool HasMarker {
        get { return result.HasMarker; }
      }
      public string Marker {
        get { return result.Marker; }
        set { SetMarker(value); }
      }
      public Builder SetMarker(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMarker = true;
        result.marker_ = value;
        return this;
      }
      public Builder ClearMarker() {
        result.hasMarker = false;
        result.marker_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::DuiContract.UserPhone> UserPhoneList {
        get { return result.userPhone_; }
      }
      public int UserPhoneCount {
        get { return result.UserPhoneCount; }
      }
      public global::DuiContract.UserPhone GetUserPhone(int index) {
        return result.GetUserPhone(index);
      }
      public Builder SetUserPhone(int index, global::DuiContract.UserPhone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.userPhone_[index] = value;
        return this;
      }
      public Builder SetUserPhone(int index, global::DuiContract.UserPhone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.userPhone_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserPhone(global::DuiContract.UserPhone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.userPhone_.Add(value);
        return this;
      }
      public Builder AddUserPhone(global::DuiContract.UserPhone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.userPhone_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserPhone(scg::IEnumerable<global::DuiContract.UserPhone> values) {
        base.AddRange(values, result.userPhone_);
        return this;
      }
      public Builder ClearUserPhone() {
        result.userPhone_.Clear();
        return this;
      }
      
      public bool HasIsAppend {
        get { return result.HasIsAppend; }
      }
      public bool IsAppend {
        get { return result.IsAppend; }
        set { SetIsAppend(value); }
      }
      public Builder SetIsAppend(bool value) {
        result.hasIsAppend = true;
        result.isAppend_ = value;
        return this;
      }
      public Builder ClearIsAppend() {
        result.hasIsAppend = false;
        result.isAppend_ = false;
        return this;
      }
    }
    static ReqAddUserPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class UserPhone : pb::GeneratedMessage<UserPhone, UserPhone.Builder> {
    private static readonly UserPhone defaultInstance = new Builder().BuildPartial();
    public static UserPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UserPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_UserPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserPhone, UserPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_UserPhone__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int PhoneNumberFieldNumber = 2;
    private bool hasPhoneNumber;
    private string phoneNumber_ = "";
    public bool HasPhoneNumber {
      get { return hasPhoneNumber; }
    }
    public string PhoneNumber {
      get { return phoneNumber_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasUserId) {
        output.WriteString(1, UserId);
      }
      if (HasPhoneNumber) {
        output.WriteString(2, PhoneNumber);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasUserId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
        }
        if (HasPhoneNumber) {
          size += pb::CodedOutputStream.ComputeStringSize(2, PhoneNumber);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UserPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<UserPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UserPhone result = new UserPhone();
      
      protected override UserPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UserPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.UserPhone.Descriptor; }
      }
      
      public override UserPhone DefaultInstanceForType {
        get { return global::DuiContract.UserPhone.DefaultInstance; }
      }
      
      public override UserPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        UserPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserPhone) {
          return MergeFrom((UserPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserPhone other) {
        if (other == global::DuiContract.UserPhone.DefaultInstance) return this;
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasPhoneNumber) {
          PhoneNumber = other.PhoneNumber;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              UserId = input.ReadString();
              break;
            }
            case 18: {
              PhoneNumber = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasUserId {
        get { return result.HasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasPhoneNumber {
        get { return result.HasPhoneNumber; }
      }
      public string PhoneNumber {
        get { return result.PhoneNumber; }
        set { SetPhoneNumber(value); }
      }
      public Builder SetPhoneNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPhoneNumber = true;
        result.phoneNumber_ = value;
        return this;
      }
      public Builder ClearPhoneNumber() {
        result.hasPhoneNumber = false;
        result.phoneNumber_ = "";
        return this;
      }
    }
    static UserPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspAddUserPhone : pb::GeneratedMessage<RspAddUserPhone, RspAddUserPhone.Builder> {
    private static readonly RspAddUserPhone defaultInstance = new Builder().BuildPartial();
    public static RspAddUserPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspAddUserPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspAddUserPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspAddUserPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspAddUserPhone, RspAddUserPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspAddUserPhone__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_ = 0;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasId) {
        output.WriteInt32(1, Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspAddUserPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspAddUserPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspAddUserPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspAddUserPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspAddUserPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspAddUserPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspAddUserPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspAddUserPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspAddUserPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspAddUserPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspAddUserPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspAddUserPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspAddUserPhone result = new RspAddUserPhone();
      
      protected override RspAddUserPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspAddUserPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspAddUserPhone.Descriptor; }
      }
      
      public override RspAddUserPhone DefaultInstanceForType {
        get { return global::DuiContract.RspAddUserPhone.DefaultInstance; }
      }
      
      public override RspAddUserPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RspAddUserPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspAddUserPhone) {
          return MergeFrom((RspAddUserPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspAddUserPhone other) {
        if (other == global::DuiContract.RspAddUserPhone.DefaultInstance) return this;
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Id = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasId {
        get { return result.HasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
    }
    static RspAddUserPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspCallStep : pb::GeneratedMessage<RspCallStep, RspCallStep.Builder> {
    private static readonly RspCallStep defaultInstance = new Builder().BuildPartial();
    public static RspCallStep DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspCallStep DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspCallStep ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspCallStep__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspCallStep, RspCallStep.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspCallStep__FieldAccessorTable; }
    }
    
    public const int SeatFieldNumber = 1;
    private bool hasSeat;
    private string seat_ = "";
    public bool HasSeat {
      get { return hasSeat; }
    }
    public string Seat {
      get { return seat_; }
    }
    
    public const int UserIdFieldNumber = 2;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int StepFieldNumber = 3;
    private bool hasStep;
    private int step_ = 0;
    public bool HasStep {
      get { return hasStep; }
    }
    public int Step {
      get { return step_; }
    }
    
    public const int TimeFieldNumber = 4;
    private bool hasTime;
    private string time_ = "";
    public bool HasTime {
      get { return hasTime; }
    }
    public string Time {
      get { return time_; }
    }
    
    public const int CallTypeFieldNumber = 5;
    private bool hasCallType;
    private int callType_ = 0;
    public bool HasCallType {
      get { return hasCallType; }
    }
    public int CallType {
      get { return callType_; }
    }
    
    public const int CallerFieldNumber = 6;
    private bool hasCaller;
    private string caller_ = "";
    public bool HasCaller {
      get { return hasCaller; }
    }
    public string Caller {
      get { return caller_; }
    }
    
    public const int CalledFieldNumber = 7;
    private bool hasCalled;
    private string called_ = "";
    public bool HasCalled {
      get { return hasCalled; }
    }
    public string Called {
      get { return called_; }
    }
    
    public const int HWhoFieldNumber = 8;
    private bool hasHWho;
    private int hWho_ = 0;
    public bool HasHWho {
      get { return hasHWho; }
    }
    public int HWho {
      get { return hWho_; }
    }
    
    public const int ChannelFieldNumber = 9;
    private bool hasChannel;
    private string channel_ = "";
    public bool HasChannel {
      get { return hasChannel; }
    }
    public string Channel {
      get { return channel_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasSeat) {
        output.WriteString(1, Seat);
      }
      if (HasUserId) {
        output.WriteString(2, UserId);
      }
      if (HasStep) {
        output.WriteInt32(3, Step);
      }
      if (HasTime) {
        output.WriteString(4, Time);
      }
      if (HasCallType) {
        output.WriteInt32(5, CallType);
      }
      if (HasCaller) {
        output.WriteString(6, Caller);
      }
      if (HasCalled) {
        output.WriteString(7, Called);
      }
      if (HasHWho) {
        output.WriteInt32(8, HWho);
      }
      if (HasChannel) {
        output.WriteString(9, Channel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasSeat) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Seat);
        }
        if (HasUserId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, UserId);
        }
        if (HasStep) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Step);
        }
        if (HasTime) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Time);
        }
        if (HasCallType) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, CallType);
        }
        if (HasCaller) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Caller);
        }
        if (HasCalled) {
          size += pb::CodedOutputStream.ComputeStringSize(7, Called);
        }
        if (HasHWho) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, HWho);
        }
        if (HasChannel) {
          size += pb::CodedOutputStream.ComputeStringSize(9, Channel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspCallStep ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspCallStep ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspCallStep ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspCallStep ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspCallStep ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspCallStep ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspCallStep ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspCallStep ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspCallStep ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspCallStep ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspCallStep prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspCallStep, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspCallStep result = new RspCallStep();
      
      protected override RspCallStep MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspCallStep();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspCallStep.Descriptor; }
      }
      
      public override RspCallStep DefaultInstanceForType {
        get { return global::DuiContract.RspCallStep.DefaultInstance; }
      }
      
      public override RspCallStep BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RspCallStep returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspCallStep) {
          return MergeFrom((RspCallStep) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspCallStep other) {
        if (other == global::DuiContract.RspCallStep.DefaultInstance) return this;
        if (other.HasSeat) {
          Seat = other.Seat;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasStep) {
          Step = other.Step;
        }
        if (other.HasTime) {
          Time = other.Time;
        }
        if (other.HasCallType) {
          CallType = other.CallType;
        }
        if (other.HasCaller) {
          Caller = other.Caller;
        }
        if (other.HasCalled) {
          Called = other.Called;
        }
        if (other.HasHWho) {
          HWho = other.HWho;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Seat = input.ReadString();
              break;
            }
            case 18: {
              UserId = input.ReadString();
              break;
            }
            case 24: {
              Step = input.ReadInt32();
              break;
            }
            case 34: {
              Time = input.ReadString();
              break;
            }
            case 40: {
              CallType = input.ReadInt32();
              break;
            }
            case 50: {
              Caller = input.ReadString();
              break;
            }
            case 58: {
              Called = input.ReadString();
              break;
            }
            case 64: {
              HWho = input.ReadInt32();
              break;
            }
            case 74: {
              Channel = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasSeat {
        get { return result.HasSeat; }
      }
      public string Seat {
        get { return result.Seat; }
        set { SetSeat(value); }
      }
      public Builder SetSeat(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder ClearSeat() {
        result.hasSeat = false;
        result.seat_ = "";
        return this;
      }
      
      public bool HasUserId {
        get { return result.HasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasStep {
        get { return result.HasStep; }
      }
      public int Step {
        get { return result.Step; }
        set { SetStep(value); }
      }
      public Builder SetStep(int value) {
        result.hasStep = true;
        result.step_ = value;
        return this;
      }
      public Builder ClearStep() {
        result.hasStep = false;
        result.step_ = 0;
        return this;
      }
      
      public bool HasTime {
        get { return result.HasTime; }
      }
      public string Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        result.hasTime = false;
        result.time_ = "";
        return this;
      }
      
      public bool HasCallType {
        get { return result.HasCallType; }
      }
      public int CallType {
        get { return result.CallType; }
        set { SetCallType(value); }
      }
      public Builder SetCallType(int value) {
        result.hasCallType = true;
        result.callType_ = value;
        return this;
      }
      public Builder ClearCallType() {
        result.hasCallType = false;
        result.callType_ = 0;
        return this;
      }
      
      public bool HasCaller {
        get { return result.HasCaller; }
      }
      public string Caller {
        get { return result.Caller; }
        set { SetCaller(value); }
      }
      public Builder SetCaller(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCaller = true;
        result.caller_ = value;
        return this;
      }
      public Builder ClearCaller() {
        result.hasCaller = false;
        result.caller_ = "";
        return this;
      }
      
      public bool HasCalled {
        get { return result.HasCalled; }
      }
      public string Called {
        get { return result.Called; }
        set { SetCalled(value); }
      }
      public Builder SetCalled(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCalled = true;
        result.called_ = value;
        return this;
      }
      public Builder ClearCalled() {
        result.hasCalled = false;
        result.called_ = "";
        return this;
      }
      
      public bool HasHWho {
        get { return result.HasHWho; }
      }
      public int HWho {
        get { return result.HWho; }
        set { SetHWho(value); }
      }
      public Builder SetHWho(int value) {
        result.hasHWho = true;
        result.hWho_ = value;
        return this;
      }
      public Builder ClearHWho() {
        result.hasHWho = false;
        result.hWho_ = 0;
        return this;
      }
      
      public bool HasChannel {
        get { return result.HasChannel; }
      }
      public string Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        result.hasChannel = false;
        result.channel_ = "";
        return this;
      }
    }
    static RspCallStep() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class SIPStatus : pb::GeneratedMessage<SIPStatus, SIPStatus.Builder> {
    private static readonly SIPStatus defaultInstance = new Builder().BuildPartial();
    public static SIPStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SIPStatus DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SIPStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_SIPStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SIPStatus, SIPStatus.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_SIPStatus__FieldAccessorTable; }
    }
    
    public const int SIPFieldNumber = 1;
    private bool hasSIP;
    private string sIP_ = "";
    public bool HasSIP {
      get { return hasSIP; }
    }
    public string SIP {
      get { return sIP_; }
    }
    
    public const int UseStatusFieldNumber = 2;
    private bool hasUseStatus;
    private int useStatus_ = 0;
    public bool HasUseStatus {
      get { return hasUseStatus; }
    }
    public int UseStatus {
      get { return useStatus_; }
    }
    
    public const int IsPausedFieldNumber = 3;
    private bool hasIsPaused;
    private bool isPaused_ = false;
    public bool HasIsPaused {
      get { return hasIsPaused; }
    }
    public bool IsPaused {
      get { return isPaused_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasSIP) {
        output.WriteString(1, SIP);
      }
      if (HasUseStatus) {
        output.WriteInt32(2, UseStatus);
      }
      if (HasIsPaused) {
        output.WriteBool(3, IsPaused);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasSIP) {
          size += pb::CodedOutputStream.ComputeStringSize(1, SIP);
        }
        if (HasUseStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, UseStatus);
        }
        if (HasIsPaused) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsPaused);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SIPStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SIPStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SIPStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SIPStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SIPStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SIPStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SIPStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SIPStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SIPStatus ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SIPStatus ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SIPStatus prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<SIPStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SIPStatus result = new SIPStatus();
      
      protected override SIPStatus MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SIPStatus();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.SIPStatus.Descriptor; }
      }
      
      public override SIPStatus DefaultInstanceForType {
        get { return global::DuiContract.SIPStatus.DefaultInstance; }
      }
      
      public override SIPStatus BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SIPStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SIPStatus) {
          return MergeFrom((SIPStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SIPStatus other) {
        if (other == global::DuiContract.SIPStatus.DefaultInstance) return this;
        if (other.HasSIP) {
          SIP = other.SIP;
        }
        if (other.HasUseStatus) {
          UseStatus = other.UseStatus;
        }
        if (other.HasIsPaused) {
          IsPaused = other.IsPaused;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              SIP = input.ReadString();
              break;
            }
            case 16: {
              UseStatus = input.ReadInt32();
              break;
            }
            case 24: {
              IsPaused = input.ReadBool();
              break;
            }
          }
        }
      }
      
      
      public bool HasSIP {
        get { return result.HasSIP; }
      }
      public string SIP {
        get { return result.SIP; }
        set { SetSIP(value); }
      }
      public Builder SetSIP(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSIP = true;
        result.sIP_ = value;
        return this;
      }
      public Builder ClearSIP() {
        result.hasSIP = false;
        result.sIP_ = "";
        return this;
      }
      
      public bool HasUseStatus {
        get { return result.HasUseStatus; }
      }
      public int UseStatus {
        get { return result.UseStatus; }
        set { SetUseStatus(value); }
      }
      public Builder SetUseStatus(int value) {
        result.hasUseStatus = true;
        result.useStatus_ = value;
        return this;
      }
      public Builder ClearUseStatus() {
        result.hasUseStatus = false;
        result.useStatus_ = 0;
        return this;
      }
      
      public bool HasIsPaused {
        get { return result.HasIsPaused; }
      }
      public bool IsPaused {
        get { return result.IsPaused; }
        set { SetIsPaused(value); }
      }
      public Builder SetIsPaused(bool value) {
        result.hasIsPaused = true;
        result.isPaused_ = value;
        return this;
      }
      public Builder ClearIsPaused() {
        result.hasIsPaused = false;
        result.isPaused_ = false;
        return this;
      }
    }
    static SIPStatus() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqSIPStatus : pb::GeneratedMessage<ReqSIPStatus, ReqSIPStatus.Builder> {
    private static readonly ReqSIPStatus defaultInstance = new Builder().BuildPartial();
    public static ReqSIPStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqSIPStatus DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqSIPStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqSIPStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqSIPStatus, ReqSIPStatus.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqSIPStatus__FieldAccessorTable; }
    }
    
    public const int SIPFieldNumber = 1;
    private bool hasSIP;
    private string sIP_ = "";
    public bool HasSIP {
      get { return hasSIP; }
    }
    public string SIP {
      get { return sIP_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasSIP) {
        output.WriteString(1, SIP);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasSIP) {
          size += pb::CodedOutputStream.ComputeStringSize(1, SIP);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqSIPStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqSIPStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqSIPStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqSIPStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqSIPStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqSIPStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqSIPStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqSIPStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqSIPStatus ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqSIPStatus ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqSIPStatus prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqSIPStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqSIPStatus result = new ReqSIPStatus();
      
      protected override ReqSIPStatus MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqSIPStatus();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqSIPStatus.Descriptor; }
      }
      
      public override ReqSIPStatus DefaultInstanceForType {
        get { return global::DuiContract.ReqSIPStatus.DefaultInstance; }
      }
      
      public override ReqSIPStatus BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReqSIPStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqSIPStatus) {
          return MergeFrom((ReqSIPStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqSIPStatus other) {
        if (other == global::DuiContract.ReqSIPStatus.DefaultInstance) return this;
        if (other.HasSIP) {
          SIP = other.SIP;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              SIP = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasSIP {
        get { return result.HasSIP; }
      }
      public string SIP {
        get { return result.SIP; }
        set { SetSIP(value); }
      }
      public Builder SetSIP(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSIP = true;
        result.sIP_ = value;
        return this;
      }
      public Builder ClearSIP() {
        result.hasSIP = false;
        result.sIP_ = "";
        return this;
      }
    }
    static ReqSIPStatus() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspSIPStatus : pb::GeneratedMessage<RspSIPStatus, RspSIPStatus.Builder> {
    private static readonly RspSIPStatus defaultInstance = new Builder().BuildPartial();
    public static RspSIPStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspSIPStatus DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspSIPStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspSIPStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspSIPStatus, RspSIPStatus.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspSIPStatus__FieldAccessorTable; }
    }
    
    public const int SIPStatusFieldNumber = 1;
    private pbc::PopsicleList<global::DuiContract.SIPStatus> sIPStatus_ = new pbc::PopsicleList<global::DuiContract.SIPStatus>();
    public scg::IList<global::DuiContract.SIPStatus> SIPStatusList {
      get { return sIPStatus_; }
    }
    public int SIPStatusCount {
      get { return sIPStatus_.Count; }
    }
    public global::DuiContract.SIPStatus GetSIPStatus(int index) {
      return sIPStatus_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::DuiContract.SIPStatus element in SIPStatusList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::DuiContract.SIPStatus element in SIPStatusList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspSIPStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspSIPStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspSIPStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspSIPStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspSIPStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspSIPStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspSIPStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspSIPStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspSIPStatus ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspSIPStatus ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspSIPStatus prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspSIPStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspSIPStatus result = new RspSIPStatus();
      
      protected override RspSIPStatus MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspSIPStatus();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspSIPStatus.Descriptor; }
      }
      
      public override RspSIPStatus DefaultInstanceForType {
        get { return global::DuiContract.RspSIPStatus.DefaultInstance; }
      }
      
      public override RspSIPStatus BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.sIPStatus_.MakeReadOnly();
        RspSIPStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspSIPStatus) {
          return MergeFrom((RspSIPStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspSIPStatus other) {
        if (other == global::DuiContract.RspSIPStatus.DefaultInstance) return this;
        if (other.sIPStatus_.Count != 0) {
          base.AddRange(other.sIPStatus_, result.sIPStatus_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::DuiContract.SIPStatus.Builder subBuilder = global::DuiContract.SIPStatus.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddSIPStatus(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::DuiContract.SIPStatus> SIPStatusList {
        get { return result.sIPStatus_; }
      }
      public int SIPStatusCount {
        get { return result.SIPStatusCount; }
      }
      public global::DuiContract.SIPStatus GetSIPStatus(int index) {
        return result.GetSIPStatus(index);
      }
      public Builder SetSIPStatus(int index, global::DuiContract.SIPStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.sIPStatus_[index] = value;
        return this;
      }
      public Builder SetSIPStatus(int index, global::DuiContract.SIPStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.sIPStatus_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSIPStatus(global::DuiContract.SIPStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.sIPStatus_.Add(value);
        return this;
      }
      public Builder AddSIPStatus(global::DuiContract.SIPStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.sIPStatus_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSIPStatus(scg::IEnumerable<global::DuiContract.SIPStatus> values) {
        base.AddRange(values, result.sIPStatus_);
        return this;
      }
      public Builder ClearSIPStatus() {
        result.sIPStatus_.Clear();
        return this;
      }
    }
    static RspSIPStatus() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqSetSIPStatus : pb::GeneratedMessage<ReqSetSIPStatus, ReqSetSIPStatus.Builder> {
    private static readonly ReqSetSIPStatus defaultInstance = new Builder().BuildPartial();
    public static ReqSetSIPStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqSetSIPStatus DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqSetSIPStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqSetSIPStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqSetSIPStatus, ReqSetSIPStatus.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqSetSIPStatus__FieldAccessorTable; }
    }
    
    public const int SIPFieldNumber = 1;
    private bool hasSIP;
    private string sIP_ = "";
    public bool HasSIP {
      get { return hasSIP; }
    }
    public string SIP {
      get { return sIP_; }
    }
    
    public const int IsPauseFieldNumber = 2;
    private bool hasIsPause;
    private bool isPause_ = false;
    public bool HasIsPause {
      get { return hasIsPause; }
    }
    public bool IsPause {
      get { return isPause_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasSIP) {
        output.WriteString(1, SIP);
      }
      if (HasIsPause) {
        output.WriteBool(2, IsPause);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasSIP) {
          size += pb::CodedOutputStream.ComputeStringSize(1, SIP);
        }
        if (HasIsPause) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsPause);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqSetSIPStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqSetSIPStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqSetSIPStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqSetSIPStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqSetSIPStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqSetSIPStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqSetSIPStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqSetSIPStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqSetSIPStatus ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqSetSIPStatus ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqSetSIPStatus prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqSetSIPStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqSetSIPStatus result = new ReqSetSIPStatus();
      
      protected override ReqSetSIPStatus MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqSetSIPStatus();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqSetSIPStatus.Descriptor; }
      }
      
      public override ReqSetSIPStatus DefaultInstanceForType {
        get { return global::DuiContract.ReqSetSIPStatus.DefaultInstance; }
      }
      
      public override ReqSetSIPStatus BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReqSetSIPStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqSetSIPStatus) {
          return MergeFrom((ReqSetSIPStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqSetSIPStatus other) {
        if (other == global::DuiContract.ReqSetSIPStatus.DefaultInstance) return this;
        if (other.HasSIP) {
          SIP = other.SIP;
        }
        if (other.HasIsPause) {
          IsPause = other.IsPause;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              SIP = input.ReadString();
              break;
            }
            case 16: {
              IsPause = input.ReadBool();
              break;
            }
          }
        }
      }
      
      
      public bool HasSIP {
        get { return result.HasSIP; }
      }
      public string SIP {
        get { return result.SIP; }
        set { SetSIP(value); }
      }
      public Builder SetSIP(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSIP = true;
        result.sIP_ = value;
        return this;
      }
      public Builder ClearSIP() {
        result.hasSIP = false;
        result.sIP_ = "";
        return this;
      }
      
      public bool HasIsPause {
        get { return result.HasIsPause; }
      }
      public bool IsPause {
        get { return result.IsPause; }
        set { SetIsPause(value); }
      }
      public Builder SetIsPause(bool value) {
        result.hasIsPause = true;
        result.isPause_ = value;
        return this;
      }
      public Builder ClearIsPause() {
        result.hasIsPause = false;
        result.isPause_ = false;
        return this;
      }
    }
    static ReqSetSIPStatus() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqCallPhone : pb::GeneratedMessage<ReqCallPhone, ReqCallPhone.Builder> {
    private static readonly ReqCallPhone defaultInstance = new Builder().BuildPartial();
    public static ReqCallPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqCallPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqCallPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqCallPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqCallPhone, ReqCallPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqCallPhone__FieldAccessorTable; }
    }
    
    public const int SIPFieldNumber = 1;
    private bool hasSIP;
    private string sIP_ = "";
    public bool HasSIP {
      get { return hasSIP; }
    }
    public string SIP {
      get { return sIP_; }
    }
    
    public const int PhoneFieldNumber = 2;
    private bool hasPhone;
    private string phone_ = "";
    public bool HasPhone {
      get { return hasPhone; }
    }
    public string Phone {
      get { return phone_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasSIP) {
        output.WriteString(1, SIP);
      }
      if (HasPhone) {
        output.WriteString(2, Phone);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasSIP) {
          size += pb::CodedOutputStream.ComputeStringSize(1, SIP);
        }
        if (HasPhone) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Phone);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqCallPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqCallPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqCallPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqCallPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqCallPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqCallPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqCallPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqCallPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqCallPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqCallPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqCallPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqCallPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqCallPhone result = new ReqCallPhone();
      
      protected override ReqCallPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqCallPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqCallPhone.Descriptor; }
      }
      
      public override ReqCallPhone DefaultInstanceForType {
        get { return global::DuiContract.ReqCallPhone.DefaultInstance; }
      }
      
      public override ReqCallPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReqCallPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqCallPhone) {
          return MergeFrom((ReqCallPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqCallPhone other) {
        if (other == global::DuiContract.ReqCallPhone.DefaultInstance) return this;
        if (other.HasSIP) {
          SIP = other.SIP;
        }
        if (other.HasPhone) {
          Phone = other.Phone;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              SIP = input.ReadString();
              break;
            }
            case 18: {
              Phone = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasSIP {
        get { return result.HasSIP; }
      }
      public string SIP {
        get { return result.SIP; }
        set { SetSIP(value); }
      }
      public Builder SetSIP(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSIP = true;
        result.sIP_ = value;
        return this;
      }
      public Builder ClearSIP() {
        result.hasSIP = false;
        result.sIP_ = "";
        return this;
      }
      
      public bool HasPhone {
        get { return result.HasPhone; }
      }
      public string Phone {
        get { return result.Phone; }
        set { SetPhone(value); }
      }
      public Builder SetPhone(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPhone = true;
        result.phone_ = value;
        return this;
      }
      public Builder ClearPhone() {
        result.hasPhone = false;
        result.phone_ = "";
        return this;
      }
    }
    static ReqCallPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqHangup : pb::GeneratedMessage<ReqHangup, ReqHangup.Builder> {
    private static readonly ReqHangup defaultInstance = new Builder().BuildPartial();
    public static ReqHangup DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqHangup DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqHangup ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqHangup__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqHangup, ReqHangup.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqHangup__FieldAccessorTable; }
    }
    
    public const int SIPFieldNumber = 1;
    private bool hasSIP;
    private string sIP_ = "";
    public bool HasSIP {
      get { return hasSIP; }
    }
    public string SIP {
      get { return sIP_; }
    }
    
    public const int ChannelFieldNumber = 2;
    private bool hasChannel;
    private string channel_ = "";
    public bool HasChannel {
      get { return hasChannel; }
    }
    public string Channel {
      get { return channel_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasSIP) {
        output.WriteString(1, SIP);
      }
      if (HasChannel) {
        output.WriteString(2, Channel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasSIP) {
          size += pb::CodedOutputStream.ComputeStringSize(1, SIP);
        }
        if (HasChannel) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Channel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqHangup ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqHangup ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqHangup ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqHangup ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqHangup ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqHangup ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqHangup ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqHangup ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqHangup ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqHangup ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqHangup prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqHangup, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqHangup result = new ReqHangup();
      
      protected override ReqHangup MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqHangup();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqHangup.Descriptor; }
      }
      
      public override ReqHangup DefaultInstanceForType {
        get { return global::DuiContract.ReqHangup.DefaultInstance; }
      }
      
      public override ReqHangup BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReqHangup returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqHangup) {
          return MergeFrom((ReqHangup) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqHangup other) {
        if (other == global::DuiContract.ReqHangup.DefaultInstance) return this;
        if (other.HasSIP) {
          SIP = other.SIP;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              SIP = input.ReadString();
              break;
            }
            case 18: {
              Channel = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasSIP {
        get { return result.HasSIP; }
      }
      public string SIP {
        get { return result.SIP; }
        set { SetSIP(value); }
      }
      public Builder SetSIP(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSIP = true;
        result.sIP_ = value;
        return this;
      }
      public Builder ClearSIP() {
        result.hasSIP = false;
        result.sIP_ = "";
        return this;
      }
      
      public bool HasChannel {
        get { return result.HasChannel; }
      }
      public string Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        result.hasChannel = false;
        result.channel_ = "";
        return this;
      }
    }
    static ReqHangup() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspCallEnd : pb::GeneratedMessage<RspCallEnd, RspCallEnd.Builder> {
    private static readonly RspCallEnd defaultInstance = new Builder().BuildPartial();
    public static RspCallEnd DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspCallEnd DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspCallEnd ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspCallEnd__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspCallEnd, RspCallEnd.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspCallEnd__FieldAccessorTable; }
    }
    
    public const int Ch1FieldNumber = 1;
    private bool hasCh1;
    private string ch1_ = "";
    public bool HasCh1 {
      get { return hasCh1; }
    }
    public string Ch1 {
      get { return ch1_; }
    }
    
    public const int Ch2FieldNumber = 2;
    private bool hasCh2;
    private string ch2_ = "";
    public bool HasCh2 {
      get { return hasCh2; }
    }
    public string Ch2 {
      get { return ch2_; }
    }
    
    public const int CallerFieldNumber = 3;
    private bool hasCaller;
    private string caller_ = "";
    public bool HasCaller {
      get { return hasCaller; }
    }
    public string Caller {
      get { return caller_; }
    }
    
    public const int CalledFieldNumber = 4;
    private bool hasCalled;
    private string called_ = "";
    public bool HasCalled {
      get { return hasCalled; }
    }
    public string Called {
      get { return called_; }
    }
    
    public const int TSFieldNumber = 5;
    private bool hasTS;
    private string tS_ = "";
    public bool HasTS {
      get { return hasTS; }
    }
    public string TS {
      get { return tS_; }
    }
    
    public const int TEFieldNumber = 6;
    private bool hasTE;
    private string tE_ = "";
    public bool HasTE {
      get { return hasTE; }
    }
    public string TE {
      get { return tE_; }
    }
    
    public const int TimesFieldNumber = 7;
    private bool hasTimes;
    private int times_ = 0;
    public bool HasTimes {
      get { return hasTimes; }
    }
    public int Times {
      get { return times_; }
    }
    
    public const int CallTypeFieldNumber = 8;
    private bool hasCallType;
    private int callType_ = 0;
    public bool HasCallType {
      get { return hasCallType; }
    }
    public int CallType {
      get { return callType_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasCh1) {
        output.WriteString(1, Ch1);
      }
      if (HasCh2) {
        output.WriteString(2, Ch2);
      }
      if (HasCaller) {
        output.WriteString(3, Caller);
      }
      if (HasCalled) {
        output.WriteString(4, Called);
      }
      if (HasTS) {
        output.WriteString(5, TS);
      }
      if (HasTE) {
        output.WriteString(6, TE);
      }
      if (HasTimes) {
        output.WriteInt32(7, Times);
      }
      if (HasCallType) {
        output.WriteInt32(8, CallType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasCh1) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Ch1);
        }
        if (HasCh2) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Ch2);
        }
        if (HasCaller) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Caller);
        }
        if (HasCalled) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Called);
        }
        if (HasTS) {
          size += pb::CodedOutputStream.ComputeStringSize(5, TS);
        }
        if (HasTE) {
          size += pb::CodedOutputStream.ComputeStringSize(6, TE);
        }
        if (HasTimes) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Times);
        }
        if (HasCallType) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, CallType);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspCallEnd ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspCallEnd ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspCallEnd ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspCallEnd ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspCallEnd ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspCallEnd ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspCallEnd ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspCallEnd ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspCallEnd ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspCallEnd ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspCallEnd prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspCallEnd, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspCallEnd result = new RspCallEnd();
      
      protected override RspCallEnd MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspCallEnd();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspCallEnd.Descriptor; }
      }
      
      public override RspCallEnd DefaultInstanceForType {
        get { return global::DuiContract.RspCallEnd.DefaultInstance; }
      }
      
      public override RspCallEnd BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RspCallEnd returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspCallEnd) {
          return MergeFrom((RspCallEnd) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspCallEnd other) {
        if (other == global::DuiContract.RspCallEnd.DefaultInstance) return this;
        if (other.HasCh1) {
          Ch1 = other.Ch1;
        }
        if (other.HasCh2) {
          Ch2 = other.Ch2;
        }
        if (other.HasCaller) {
          Caller = other.Caller;
        }
        if (other.HasCalled) {
          Called = other.Called;
        }
        if (other.HasTS) {
          TS = other.TS;
        }
        if (other.HasTE) {
          TE = other.TE;
        }
        if (other.HasTimes) {
          Times = other.Times;
        }
        if (other.HasCallType) {
          CallType = other.CallType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Ch1 = input.ReadString();
              break;
            }
            case 18: {
              Ch2 = input.ReadString();
              break;
            }
            case 26: {
              Caller = input.ReadString();
              break;
            }
            case 34: {
              Called = input.ReadString();
              break;
            }
            case 42: {
              TS = input.ReadString();
              break;
            }
            case 50: {
              TE = input.ReadString();
              break;
            }
            case 56: {
              Times = input.ReadInt32();
              break;
            }
            case 64: {
              CallType = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasCh1 {
        get { return result.HasCh1; }
      }
      public string Ch1 {
        get { return result.Ch1; }
        set { SetCh1(value); }
      }
      public Builder SetCh1(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCh1 = true;
        result.ch1_ = value;
        return this;
      }
      public Builder ClearCh1() {
        result.hasCh1 = false;
        result.ch1_ = "";
        return this;
      }
      
      public bool HasCh2 {
        get { return result.HasCh2; }
      }
      public string Ch2 {
        get { return result.Ch2; }
        set { SetCh2(value); }
      }
      public Builder SetCh2(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCh2 = true;
        result.ch2_ = value;
        return this;
      }
      public Builder ClearCh2() {
        result.hasCh2 = false;
        result.ch2_ = "";
        return this;
      }
      
      public bool HasCaller {
        get { return result.HasCaller; }
      }
      public string Caller {
        get { return result.Caller; }
        set { SetCaller(value); }
      }
      public Builder SetCaller(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCaller = true;
        result.caller_ = value;
        return this;
      }
      public Builder ClearCaller() {
        result.hasCaller = false;
        result.caller_ = "";
        return this;
      }
      
      public bool HasCalled {
        get { return result.HasCalled; }
      }
      public string Called {
        get { return result.Called; }
        set { SetCalled(value); }
      }
      public Builder SetCalled(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCalled = true;
        result.called_ = value;
        return this;
      }
      public Builder ClearCalled() {
        result.hasCalled = false;
        result.called_ = "";
        return this;
      }
      
      public bool HasTS {
        get { return result.HasTS; }
      }
      public string TS {
        get { return result.TS; }
        set { SetTS(value); }
      }
      public Builder SetTS(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTS = true;
        result.tS_ = value;
        return this;
      }
      public Builder ClearTS() {
        result.hasTS = false;
        result.tS_ = "";
        return this;
      }
      
      public bool HasTE {
        get { return result.HasTE; }
      }
      public string TE {
        get { return result.TE; }
        set { SetTE(value); }
      }
      public Builder SetTE(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTE = true;
        result.tE_ = value;
        return this;
      }
      public Builder ClearTE() {
        result.hasTE = false;
        result.tE_ = "";
        return this;
      }
      
      public bool HasTimes {
        get { return result.HasTimes; }
      }
      public int Times {
        get { return result.Times; }
        set { SetTimes(value); }
      }
      public Builder SetTimes(int value) {
        result.hasTimes = true;
        result.times_ = value;
        return this;
      }
      public Builder ClearTimes() {
        result.hasTimes = false;
        result.times_ = 0;
        return this;
      }
      
      public bool HasCallType {
        get { return result.HasCallType; }
      }
      public int CallType {
        get { return result.CallType; }
        set { SetCallType(value); }
      }
      public Builder SetCallType(int value) {
        result.hasCallType = true;
        result.callType_ = value;
        return this;
      }
      public Builder ClearCallType() {
        result.hasCallType = false;
        result.callType_ = 0;
        return this;
      }
    }
    static RspCallEnd() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqNotPlayPhone : pb::GeneratedMessage<ReqNotPlayPhone, ReqNotPlayPhone.Builder> {
    private static readonly ReqNotPlayPhone defaultInstance = new Builder().BuildPartial();
    public static ReqNotPlayPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqNotPlayPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqNotPlayPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqNotPlayPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqNotPlayPhone, ReqNotPlayPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqNotPlayPhone__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqNotPlayPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqNotPlayPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqNotPlayPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqNotPlayPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqNotPlayPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqNotPlayPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqNotPlayPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqNotPlayPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqNotPlayPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqNotPlayPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqNotPlayPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqNotPlayPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqNotPlayPhone result = new ReqNotPlayPhone();
      
      protected override ReqNotPlayPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqNotPlayPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqNotPlayPhone.Descriptor; }
      }
      
      public override ReqNotPlayPhone DefaultInstanceForType {
        get { return global::DuiContract.ReqNotPlayPhone.DefaultInstance; }
      }
      
      public override ReqNotPlayPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReqNotPlayPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqNotPlayPhone) {
          return MergeFrom((ReqNotPlayPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqNotPlayPhone other) {
        if (other == global::DuiContract.ReqNotPlayPhone.DefaultInstance) return this;
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
          }
        }
      }
      
    }
    static ReqNotPlayPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspNotPlayPhone : pb::GeneratedMessage<RspNotPlayPhone, RspNotPlayPhone.Builder> {
    private static readonly RspNotPlayPhone defaultInstance = new Builder().BuildPartial();
    public static RspNotPlayPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspNotPlayPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspNotPlayPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspNotPlayPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspNotPlayPhone, RspNotPlayPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspNotPlayPhone__FieldAccessorTable; }
    }
    
    public const int UserPhoneFieldNumber = 1;
    private pbc::PopsicleList<global::DuiContract.UserPhone> userPhone_ = new pbc::PopsicleList<global::DuiContract.UserPhone>();
    public scg::IList<global::DuiContract.UserPhone> UserPhoneList {
      get { return userPhone_; }
    }
    public int UserPhoneCount {
      get { return userPhone_.Count; }
    }
    public global::DuiContract.UserPhone GetUserPhone(int index) {
      return userPhone_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::DuiContract.UserPhone element in UserPhoneList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::DuiContract.UserPhone element in UserPhoneList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspNotPlayPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspNotPlayPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspNotPlayPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspNotPlayPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspNotPlayPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspNotPlayPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspNotPlayPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspNotPlayPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspNotPlayPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspNotPlayPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspNotPlayPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspNotPlayPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspNotPlayPhone result = new RspNotPlayPhone();
      
      protected override RspNotPlayPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspNotPlayPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspNotPlayPhone.Descriptor; }
      }
      
      public override RspNotPlayPhone DefaultInstanceForType {
        get { return global::DuiContract.RspNotPlayPhone.DefaultInstance; }
      }
      
      public override RspNotPlayPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.userPhone_.MakeReadOnly();
        RspNotPlayPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspNotPlayPhone) {
          return MergeFrom((RspNotPlayPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspNotPlayPhone other) {
        if (other == global::DuiContract.RspNotPlayPhone.DefaultInstance) return this;
        if (other.userPhone_.Count != 0) {
          base.AddRange(other.userPhone_, result.userPhone_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::DuiContract.UserPhone.Builder subBuilder = global::DuiContract.UserPhone.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddUserPhone(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::DuiContract.UserPhone> UserPhoneList {
        get { return result.userPhone_; }
      }
      public int UserPhoneCount {
        get { return result.UserPhoneCount; }
      }
      public global::DuiContract.UserPhone GetUserPhone(int index) {
        return result.GetUserPhone(index);
      }
      public Builder SetUserPhone(int index, global::DuiContract.UserPhone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.userPhone_[index] = value;
        return this;
      }
      public Builder SetUserPhone(int index, global::DuiContract.UserPhone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.userPhone_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserPhone(global::DuiContract.UserPhone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.userPhone_.Add(value);
        return this;
      }
      public Builder AddUserPhone(global::DuiContract.UserPhone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.userPhone_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserPhone(scg::IEnumerable<global::DuiContract.UserPhone> values) {
        base.AddRange(values, result.userPhone_);
        return this;
      }
      public Builder ClearUserPhone() {
        result.userPhone_.Clear();
        return this;
      }
    }
    static RspNotPlayPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqDelPhone : pb::GeneratedMessage<ReqDelPhone, ReqDelPhone.Builder> {
    private static readonly ReqDelPhone defaultInstance = new Builder().BuildPartial();
    public static ReqDelPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqDelPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqDelPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqDelPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqDelPhone, ReqDelPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqDelPhone__FieldAccessorTable; }
    }
    
    public const int PhoneFieldNumber = 1;
    private pbc::PopsicleList<string> phone_ = new pbc::PopsicleList<string>();
    public scg::IList<string> PhoneList {
      get { return pbc::Lists.AsReadOnly(phone_); }
    }
    public int PhoneCount {
      get { return phone_.Count; }
    }
    public string GetPhone(int index) {
      return phone_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (phone_.Count > 0) {
        foreach (string element in phone_) {
          output.WriteString(1, element);
        }
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in PhoneList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * phone_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqDelPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqDelPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqDelPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqDelPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqDelPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqDelPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqDelPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqDelPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqDelPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqDelPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqDelPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqDelPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqDelPhone result = new ReqDelPhone();
      
      protected override ReqDelPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqDelPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqDelPhone.Descriptor; }
      }
      
      public override ReqDelPhone DefaultInstanceForType {
        get { return global::DuiContract.ReqDelPhone.DefaultInstance; }
      }
      
      public override ReqDelPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.phone_.MakeReadOnly();
        ReqDelPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqDelPhone) {
          return MergeFrom((ReqDelPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqDelPhone other) {
        if (other == global::DuiContract.ReqDelPhone.DefaultInstance) return this;
        if (other.phone_.Count != 0) {
          base.AddRange(other.phone_, result.phone_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              AddPhone(input.ReadString());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<string> PhoneList {
        get { return result.phone_; }
      }
      public int PhoneCount {
        get { return result.PhoneCount; }
      }
      public string GetPhone(int index) {
        return result.GetPhone(index);
      }
      public Builder SetPhone(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.phone_[index] = value;
        return this;
      }
      public Builder AddPhone(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.phone_.Add(value);
        return this;
      }
      public Builder AddRangePhone(scg::IEnumerable<string> values) {
        base.AddRange(values, result.phone_);
        return this;
      }
      public Builder ClearPhone() {
        result.phone_.Clear();
        return this;
      }
    }
    static ReqDelPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspDelPhone : pb::GeneratedMessage<RspDelPhone, RspDelPhone.Builder> {
    private static readonly RspDelPhone defaultInstance = new Builder().BuildPartial();
    public static RspDelPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspDelPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspDelPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspDelPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspDelPhone, RspDelPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspDelPhone__FieldAccessorTable; }
    }
    
    public const int CountFieldNumber = 1;
    private bool hasCount;
    private int count_ = 0;
    public bool HasCount {
      get { return hasCount; }
    }
    public int Count {
      get { return count_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasCount) {
        output.WriteInt32(1, Count);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Count);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspDelPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspDelPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspDelPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspDelPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspDelPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspDelPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspDelPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspDelPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspDelPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspDelPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspDelPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspDelPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspDelPhone result = new RspDelPhone();
      
      protected override RspDelPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspDelPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspDelPhone.Descriptor; }
      }
      
      public override RspDelPhone DefaultInstanceForType {
        get { return global::DuiContract.RspDelPhone.DefaultInstance; }
      }
      
      public override RspDelPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RspDelPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspDelPhone) {
          return MergeFrom((RspDelPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspDelPhone other) {
        if (other == global::DuiContract.RspDelPhone.DefaultInstance) return this;
        if (other.HasCount) {
          Count = other.Count;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Count = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasCount {
        get { return result.HasCount; }
      }
      public int Count {
        get { return result.Count; }
        set { SetCount(value); }
      }
      public Builder SetCount(int value) {
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder ClearCount() {
        result.hasCount = false;
        result.count_ = 0;
        return this;
      }
    }
    static RspDelPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqOld : pb::GeneratedMessage<ReqOld, ReqOld.Builder> {
    private static readonly ReqOld defaultInstance = new Builder().BuildPartial();
    public static ReqOld DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqOld DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqOld ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqOld__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqOld, ReqOld.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqOld__FieldAccessorTable; }
    }
    
    public const int ParamJSONFieldNumber = 1;
    private bool hasParamJSON;
    private pb::ByteString paramJSON_ = pb::ByteString.Empty;
    public bool HasParamJSON {
      get { return hasParamJSON; }
    }
    public pb::ByteString ParamJSON {
      get { return paramJSON_; }
    }
    
    public const int ParamStringListFieldNumber = 2;
    private bool hasParamStringList;
    private pb::ByteString paramStringList_ = pb::ByteString.Empty;
    public bool HasParamStringList {
      get { return hasParamStringList; }
    }
    public pb::ByteString ParamStringList {
      get { return paramStringList_; }
    }
    
    public const int ParamStringFieldNumber = 3;
    private bool hasParamString;
    private pb::ByteString paramString_ = pb::ByteString.Empty;
    public bool HasParamString {
      get { return hasParamString; }
    }
    public pb::ByteString ParamString {
      get { return paramString_; }
    }
    
    public const int ParamBytesFieldNumber = 4;
    private bool hasParamBytes;
    private pb::ByteString paramBytes_ = pb::ByteString.Empty;
    public bool HasParamBytes {
      get { return hasParamBytes; }
    }
    public pb::ByteString ParamBytes {
      get { return paramBytes_; }
    }
    
    public const int ParamByteListFieldNumber = 5;
    private bool hasParamByteList;
    private pb::ByteString paramByteList_ = pb::ByteString.Empty;
    public bool HasParamByteList {
      get { return hasParamByteList; }
    }
    public pb::ByteString ParamByteList {
      get { return paramByteList_; }
    }
    
    public const int MarkerFieldNumber = 6;
    private bool hasMarker;
    private string marker_ = "";
    public bool HasMarker {
      get { return hasMarker; }
    }
    public string Marker {
      get { return marker_; }
    }
    
    public const int IsUseZipFieldNumber = 7;
    private bool hasIsUseZip;
    private bool isUseZip_ = false;
    public bool HasIsUseZip {
      get { return hasIsUseZip; }
    }
    public bool IsUseZip {
      get { return isUseZip_; }
    }
    
    public const int TranNameFieldNumber = 8;
    private bool hasTranName;
    private string tranName_ = "";
    public bool HasTranName {
      get { return hasTranName; }
    }
    public string TranName {
      get { return tranName_; }
    }
    
    public const int FunctionFieldNumber = 9;
    private bool hasFunction;
    private string function_ = "";
    public bool HasFunction {
      get { return hasFunction; }
    }
    public string Function {
      get { return function_; }
    }
    
    public const int ActionFieldNumber = 10;
    private bool hasAction;
    private string action_ = "";
    public bool HasAction {
      get { return hasAction; }
    }
    public string Action {
      get { return action_; }
    }
    
    public const int DBMarkerFieldNumber = 11;
    private bool hasDBMarker;
    private string dBMarker_ = "";
    public bool HasDBMarker {
      get { return hasDBMarker; }
    }
    public string DBMarker {
      get { return dBMarker_; }
    }
    
    public const int JsonFieldNumber = 12;
    private bool hasJson;
    private string json_ = "";
    public bool HasJson {
      get { return hasJson; }
    }
    public string Json {
      get { return json_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasParamJSON) {
        output.WriteBytes(1, ParamJSON);
      }
      if (HasParamStringList) {
        output.WriteBytes(2, ParamStringList);
      }
      if (HasParamString) {
        output.WriteBytes(3, ParamString);
      }
      if (HasParamBytes) {
        output.WriteBytes(4, ParamBytes);
      }
      if (HasParamByteList) {
        output.WriteBytes(5, ParamByteList);
      }
      if (HasMarker) {
        output.WriteString(6, Marker);
      }
      if (HasIsUseZip) {
        output.WriteBool(7, IsUseZip);
      }
      if (HasTranName) {
        output.WriteString(8, TranName);
      }
      if (HasFunction) {
        output.WriteString(9, Function);
      }
      if (HasAction) {
        output.WriteString(10, Action);
      }
      if (HasDBMarker) {
        output.WriteString(11, DBMarker);
      }
      if (HasJson) {
        output.WriteString(12, Json);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasParamJSON) {
          size += pb::CodedOutputStream.ComputeBytesSize(1, ParamJSON);
        }
        if (HasParamStringList) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, ParamStringList);
        }
        if (HasParamString) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, ParamString);
        }
        if (HasParamBytes) {
          size += pb::CodedOutputStream.ComputeBytesSize(4, ParamBytes);
        }
        if (HasParamByteList) {
          size += pb::CodedOutputStream.ComputeBytesSize(5, ParamByteList);
        }
        if (HasMarker) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Marker);
        }
        if (HasIsUseZip) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, IsUseZip);
        }
        if (HasTranName) {
          size += pb::CodedOutputStream.ComputeStringSize(8, TranName);
        }
        if (HasFunction) {
          size += pb::CodedOutputStream.ComputeStringSize(9, Function);
        }
        if (HasAction) {
          size += pb::CodedOutputStream.ComputeStringSize(10, Action);
        }
        if (HasDBMarker) {
          size += pb::CodedOutputStream.ComputeStringSize(11, DBMarker);
        }
        if (HasJson) {
          size += pb::CodedOutputStream.ComputeStringSize(12, Json);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqOld ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqOld ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqOld ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqOld ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqOld ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqOld ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqOld ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqOld ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqOld ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqOld ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqOld prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqOld, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqOld result = new ReqOld();
      
      protected override ReqOld MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqOld();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqOld.Descriptor; }
      }
      
      public override ReqOld DefaultInstanceForType {
        get { return global::DuiContract.ReqOld.DefaultInstance; }
      }
      
      public override ReqOld BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReqOld returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqOld) {
          return MergeFrom((ReqOld) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqOld other) {
        if (other == global::DuiContract.ReqOld.DefaultInstance) return this;
        if (other.HasParamJSON) {
          ParamJSON = other.ParamJSON;
        }
        if (other.HasParamStringList) {
          ParamStringList = other.ParamStringList;
        }
        if (other.HasParamString) {
          ParamString = other.ParamString;
        }
        if (other.HasParamBytes) {
          ParamBytes = other.ParamBytes;
        }
        if (other.HasParamByteList) {
          ParamByteList = other.ParamByteList;
        }
        if (other.HasMarker) {
          Marker = other.Marker;
        }
        if (other.HasIsUseZip) {
          IsUseZip = other.IsUseZip;
        }
        if (other.HasTranName) {
          TranName = other.TranName;
        }
        if (other.HasFunction) {
          Function = other.Function;
        }
        if (other.HasAction) {
          Action = other.Action;
        }
        if (other.HasDBMarker) {
          DBMarker = other.DBMarker;
        }
        if (other.HasJson) {
          Json = other.Json;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              ParamJSON = input.ReadBytes();
              break;
            }
            case 18: {
              ParamStringList = input.ReadBytes();
              break;
            }
            case 26: {
              ParamString = input.ReadBytes();
              break;
            }
            case 34: {
              ParamBytes = input.ReadBytes();
              break;
            }
            case 42: {
              ParamByteList = input.ReadBytes();
              break;
            }
            case 50: {
              Marker = input.ReadString();
              break;
            }
            case 56: {
              IsUseZip = input.ReadBool();
              break;
            }
            case 66: {
              TranName = input.ReadString();
              break;
            }
            case 74: {
              Function = input.ReadString();
              break;
            }
            case 82: {
              Action = input.ReadString();
              break;
            }
            case 90: {
              DBMarker = input.ReadString();
              break;
            }
            case 98: {
              Json = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasParamJSON {
        get { return result.HasParamJSON; }
      }
      public pb::ByteString ParamJSON {
        get { return result.ParamJSON; }
        set { SetParamJSON(value); }
      }
      public Builder SetParamJSON(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasParamJSON = true;
        result.paramJSON_ = value;
        return this;
      }
      public Builder ClearParamJSON() {
        result.hasParamJSON = false;
        result.paramJSON_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasParamStringList {
        get { return result.HasParamStringList; }
      }
      public pb::ByteString ParamStringList {
        get { return result.ParamStringList; }
        set { SetParamStringList(value); }
      }
      public Builder SetParamStringList(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasParamStringList = true;
        result.paramStringList_ = value;
        return this;
      }
      public Builder ClearParamStringList() {
        result.hasParamStringList = false;
        result.paramStringList_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasParamString {
        get { return result.HasParamString; }
      }
      public pb::ByteString ParamString {
        get { return result.ParamString; }
        set { SetParamString(value); }
      }
      public Builder SetParamString(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasParamString = true;
        result.paramString_ = value;
        return this;
      }
      public Builder ClearParamString() {
        result.hasParamString = false;
        result.paramString_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasParamBytes {
        get { return result.HasParamBytes; }
      }
      public pb::ByteString ParamBytes {
        get { return result.ParamBytes; }
        set { SetParamBytes(value); }
      }
      public Builder SetParamBytes(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasParamBytes = true;
        result.paramBytes_ = value;
        return this;
      }
      public Builder ClearParamBytes() {
        result.hasParamBytes = false;
        result.paramBytes_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasParamByteList {
        get { return result.HasParamByteList; }
      }
      public pb::ByteString ParamByteList {
        get { return result.ParamByteList; }
        set { SetParamByteList(value); }
      }
      public Builder SetParamByteList(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasParamByteList = true;
        result.paramByteList_ = value;
        return this;
      }
      public Builder ClearParamByteList() {
        result.hasParamByteList = false;
        result.paramByteList_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasMarker {
        get { return result.HasMarker; }
      }
      public string Marker {
        get { return result.Marker; }
        set { SetMarker(value); }
      }
      public Builder SetMarker(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMarker = true;
        result.marker_ = value;
        return this;
      }
      public Builder ClearMarker() {
        result.hasMarker = false;
        result.marker_ = "";
        return this;
      }
      
      public bool HasIsUseZip {
        get { return result.HasIsUseZip; }
      }
      public bool IsUseZip {
        get { return result.IsUseZip; }
        set { SetIsUseZip(value); }
      }
      public Builder SetIsUseZip(bool value) {
        result.hasIsUseZip = true;
        result.isUseZip_ = value;
        return this;
      }
      public Builder ClearIsUseZip() {
        result.hasIsUseZip = false;
        result.isUseZip_ = false;
        return this;
      }
      
      public bool HasTranName {
        get { return result.HasTranName; }
      }
      public string TranName {
        get { return result.TranName; }
        set { SetTranName(value); }
      }
      public Builder SetTranName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTranName = true;
        result.tranName_ = value;
        return this;
      }
      public Builder ClearTranName() {
        result.hasTranName = false;
        result.tranName_ = "";
        return this;
      }
      
      public bool HasFunction {
        get { return result.HasFunction; }
      }
      public string Function {
        get { return result.Function; }
        set { SetFunction(value); }
      }
      public Builder SetFunction(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFunction = true;
        result.function_ = value;
        return this;
      }
      public Builder ClearFunction() {
        result.hasFunction = false;
        result.function_ = "";
        return this;
      }
      
      public bool HasAction {
        get { return result.HasAction; }
      }
      public string Action {
        get { return result.Action; }
        set { SetAction(value); }
      }
      public Builder SetAction(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder ClearAction() {
        result.hasAction = false;
        result.action_ = "";
        return this;
      }
      
      public bool HasDBMarker {
        get { return result.HasDBMarker; }
      }
      public string DBMarker {
        get { return result.DBMarker; }
        set { SetDBMarker(value); }
      }
      public Builder SetDBMarker(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasDBMarker = true;
        result.dBMarker_ = value;
        return this;
      }
      public Builder ClearDBMarker() {
        result.hasDBMarker = false;
        result.dBMarker_ = "";
        return this;
      }
      
      public bool HasJson {
        get { return result.HasJson; }
      }
      public string Json {
        get { return result.Json; }
        set { SetJson(value); }
      }
      public Builder SetJson(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasJson = true;
        result.json_ = value;
        return this;
      }
      public Builder ClearJson() {
        result.hasJson = false;
        result.json_ = "";
        return this;
      }
    }
    static ReqOld() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspOld : pb::GeneratedMessage<RspOld, RspOld.Builder> {
    private static readonly RspOld defaultInstance = new Builder().BuildPartial();
    public static RspOld DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspOld DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspOld ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspOld__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspOld, RspOld.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspOld__FieldAccessorTable; }
    }
    
    public const int ExecuteResultFieldNumber = 1;
    private bool hasExecuteResult;
    private bool executeResult_ = false;
    public bool HasExecuteResult {
      get { return hasExecuteResult; }
    }
    public bool ExecuteResult {
      get { return executeResult_; }
    }
    
    public const int ReturnMsgFieldNumber = 2;
    private bool hasReturnMsg;
    private string returnMsg_ = "";
    public bool HasReturnMsg {
      get { return hasReturnMsg; }
    }
    public string ReturnMsg {
      get { return returnMsg_; }
    }
    
    public const int ReturnStringFieldNumber = 3;
    private bool hasReturnString;
    private string returnString_ = "";
    public bool HasReturnString {
      get { return hasReturnString; }
    }
    public string ReturnString {
      get { return returnString_; }
    }
    
    public const int ReturnStringsFieldNumber = 4;
    private bool hasReturnStrings;
    private pb::ByteString returnStrings_ = pb::ByteString.Empty;
    public bool HasReturnStrings {
      get { return hasReturnStrings; }
    }
    public pb::ByteString ReturnStrings {
      get { return returnStrings_; }
    }
    
    public const int ReturnBytesFieldNumber = 5;
    private bool hasReturnBytes;
    private pb::ByteString returnBytes_ = pb::ByteString.Empty;
    public bool HasReturnBytes {
      get { return hasReturnBytes; }
    }
    public pb::ByteString ReturnBytes {
      get { return returnBytes_; }
    }
    
    public const int ReturnDataTableFieldNumber = 6;
    private bool hasReturnDataTable;
    private pb::ByteString returnDataTable_ = pb::ByteString.Empty;
    public bool HasReturnDataTable {
      get { return hasReturnDataTable; }
    }
    public pb::ByteString ReturnDataTable {
      get { return returnDataTable_; }
    }
    
    public const int ReturnDataSetFieldNumber = 7;
    private bool hasReturnDataSet;
    private pb::ByteString returnDataSet_ = pb::ByteString.Empty;
    public bool HasReturnDataSet {
      get { return hasReturnDataSet; }
    }
    public pb::ByteString ReturnDataSet {
      get { return returnDataSet_; }
    }
    
    public const int MarkerFieldNumber = 8;
    private bool hasMarker;
    private string marker_ = "";
    public bool HasMarker {
      get { return hasMarker; }
    }
    public string Marker {
      get { return marker_; }
    }
    
    public const int IsZipFieldNumber = 9;
    private bool hasIsZip;
    private bool isZip_ = false;
    public bool HasIsZip {
      get { return hasIsZip; }
    }
    public bool IsZip {
      get { return isZip_; }
    }
    
    public const int ZipTypeFieldNumber = 10;
    private bool hasZipType;
    private string zipType_ = "";
    public bool HasZipType {
      get { return hasZipType; }
    }
    public string ZipType {
      get { return zipType_; }
    }
    
    public const int UserIdFieldNumber = 11;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasExecuteResult) {
        output.WriteBool(1, ExecuteResult);
      }
      if (HasReturnMsg) {
        output.WriteString(2, ReturnMsg);
      }
      if (HasReturnString) {
        output.WriteString(3, ReturnString);
      }
      if (HasReturnStrings) {
        output.WriteBytes(4, ReturnStrings);
      }
      if (HasReturnBytes) {
        output.WriteBytes(5, ReturnBytes);
      }
      if (HasReturnDataTable) {
        output.WriteBytes(6, ReturnDataTable);
      }
      if (HasReturnDataSet) {
        output.WriteBytes(7, ReturnDataSet);
      }
      if (HasMarker) {
        output.WriteString(8, Marker);
      }
      if (HasIsZip) {
        output.WriteBool(9, IsZip);
      }
      if (HasZipType) {
        output.WriteString(10, ZipType);
      }
      if (HasUserId) {
        output.WriteString(11, UserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasExecuteResult) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, ExecuteResult);
        }
        if (HasReturnMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ReturnMsg);
        }
        if (HasReturnString) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ReturnString);
        }
        if (HasReturnStrings) {
          size += pb::CodedOutputStream.ComputeBytesSize(4, ReturnStrings);
        }
        if (HasReturnBytes) {
          size += pb::CodedOutputStream.ComputeBytesSize(5, ReturnBytes);
        }
        if (HasReturnDataTable) {
          size += pb::CodedOutputStream.ComputeBytesSize(6, ReturnDataTable);
        }
        if (HasReturnDataSet) {
          size += pb::CodedOutputStream.ComputeBytesSize(7, ReturnDataSet);
        }
        if (HasMarker) {
          size += pb::CodedOutputStream.ComputeStringSize(8, Marker);
        }
        if (HasIsZip) {
          size += pb::CodedOutputStream.ComputeBoolSize(9, IsZip);
        }
        if (HasZipType) {
          size += pb::CodedOutputStream.ComputeStringSize(10, ZipType);
        }
        if (HasUserId) {
          size += pb::CodedOutputStream.ComputeStringSize(11, UserId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspOld ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspOld ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspOld ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspOld ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspOld ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspOld ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspOld ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspOld ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspOld ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspOld ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspOld prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspOld, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspOld result = new RspOld();
      
      protected override RspOld MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspOld();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspOld.Descriptor; }
      }
      
      public override RspOld DefaultInstanceForType {
        get { return global::DuiContract.RspOld.DefaultInstance; }
      }
      
      public override RspOld BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RspOld returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspOld) {
          return MergeFrom((RspOld) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspOld other) {
        if (other == global::DuiContract.RspOld.DefaultInstance) return this;
        if (other.HasExecuteResult) {
          ExecuteResult = other.ExecuteResult;
        }
        if (other.HasReturnMsg) {
          ReturnMsg = other.ReturnMsg;
        }
        if (other.HasReturnString) {
          ReturnString = other.ReturnString;
        }
        if (other.HasReturnStrings) {
          ReturnStrings = other.ReturnStrings;
        }
        if (other.HasReturnBytes) {
          ReturnBytes = other.ReturnBytes;
        }
        if (other.HasReturnDataTable) {
          ReturnDataTable = other.ReturnDataTable;
        }
        if (other.HasReturnDataSet) {
          ReturnDataSet = other.ReturnDataSet;
        }
        if (other.HasMarker) {
          Marker = other.Marker;
        }
        if (other.HasIsZip) {
          IsZip = other.IsZip;
        }
        if (other.HasZipType) {
          ZipType = other.ZipType;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              ExecuteResult = input.ReadBool();
              break;
            }
            case 18: {
              ReturnMsg = input.ReadString();
              break;
            }
            case 26: {
              ReturnString = input.ReadString();
              break;
            }
            case 34: {
              ReturnStrings = input.ReadBytes();
              break;
            }
            case 42: {
              ReturnBytes = input.ReadBytes();
              break;
            }
            case 50: {
              ReturnDataTable = input.ReadBytes();
              break;
            }
            case 58: {
              ReturnDataSet = input.ReadBytes();
              break;
            }
            case 66: {
              Marker = input.ReadString();
              break;
            }
            case 72: {
              IsZip = input.ReadBool();
              break;
            }
            case 82: {
              ZipType = input.ReadString();
              break;
            }
            case 90: {
              UserId = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasExecuteResult {
        get { return result.HasExecuteResult; }
      }
      public bool ExecuteResult {
        get { return result.ExecuteResult; }
        set { SetExecuteResult(value); }
      }
      public Builder SetExecuteResult(bool value) {
        result.hasExecuteResult = true;
        result.executeResult_ = value;
        return this;
      }
      public Builder ClearExecuteResult() {
        result.hasExecuteResult = false;
        result.executeResult_ = false;
        return this;
      }
      
      public bool HasReturnMsg {
        get { return result.HasReturnMsg; }
      }
      public string ReturnMsg {
        get { return result.ReturnMsg; }
        set { SetReturnMsg(value); }
      }
      public Builder SetReturnMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReturnMsg = true;
        result.returnMsg_ = value;
        return this;
      }
      public Builder ClearReturnMsg() {
        result.hasReturnMsg = false;
        result.returnMsg_ = "";
        return this;
      }
      
      public bool HasReturnString {
        get { return result.HasReturnString; }
      }
      public string ReturnString {
        get { return result.ReturnString; }
        set { SetReturnString(value); }
      }
      public Builder SetReturnString(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReturnString = true;
        result.returnString_ = value;
        return this;
      }
      public Builder ClearReturnString() {
        result.hasReturnString = false;
        result.returnString_ = "";
        return this;
      }
      
      public bool HasReturnStrings {
        get { return result.HasReturnStrings; }
      }
      public pb::ByteString ReturnStrings {
        get { return result.ReturnStrings; }
        set { SetReturnStrings(value); }
      }
      public Builder SetReturnStrings(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReturnStrings = true;
        result.returnStrings_ = value;
        return this;
      }
      public Builder ClearReturnStrings() {
        result.hasReturnStrings = false;
        result.returnStrings_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasReturnBytes {
        get { return result.HasReturnBytes; }
      }
      public pb::ByteString ReturnBytes {
        get { return result.ReturnBytes; }
        set { SetReturnBytes(value); }
      }
      public Builder SetReturnBytes(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReturnBytes = true;
        result.returnBytes_ = value;
        return this;
      }
      public Builder ClearReturnBytes() {
        result.hasReturnBytes = false;
        result.returnBytes_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasReturnDataTable {
        get { return result.HasReturnDataTable; }
      }
      public pb::ByteString ReturnDataTable {
        get { return result.ReturnDataTable; }
        set { SetReturnDataTable(value); }
      }
      public Builder SetReturnDataTable(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReturnDataTable = true;
        result.returnDataTable_ = value;
        return this;
      }
      public Builder ClearReturnDataTable() {
        result.hasReturnDataTable = false;
        result.returnDataTable_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasReturnDataSet {
        get { return result.HasReturnDataSet; }
      }
      public pb::ByteString ReturnDataSet {
        get { return result.ReturnDataSet; }
        set { SetReturnDataSet(value); }
      }
      public Builder SetReturnDataSet(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReturnDataSet = true;
        result.returnDataSet_ = value;
        return this;
      }
      public Builder ClearReturnDataSet() {
        result.hasReturnDataSet = false;
        result.returnDataSet_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasMarker {
        get { return result.HasMarker; }
      }
      public string Marker {
        get { return result.Marker; }
        set { SetMarker(value); }
      }
      public Builder SetMarker(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMarker = true;
        result.marker_ = value;
        return this;
      }
      public Builder ClearMarker() {
        result.hasMarker = false;
        result.marker_ = "";
        return this;
      }
      
      public bool HasIsZip {
        get { return result.HasIsZip; }
      }
      public bool IsZip {
        get { return result.IsZip; }
        set { SetIsZip(value); }
      }
      public Builder SetIsZip(bool value) {
        result.hasIsZip = true;
        result.isZip_ = value;
        return this;
      }
      public Builder ClearIsZip() {
        result.hasIsZip = false;
        result.isZip_ = false;
        return this;
      }
      
      public bool HasZipType {
        get { return result.HasZipType; }
      }
      public string ZipType {
        get { return result.ZipType; }
        set { SetZipType(value); }
      }
      public Builder SetZipType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasZipType = true;
        result.zipType_ = value;
        return this;
      }
      public Builder ClearZipType() {
        result.hasZipType = false;
        result.zipType_ = "";
        return this;
      }
      
      public bool HasUserId {
        get { return result.HasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
    }
    static RspOld() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class FailUserPhone : pb::GeneratedMessage<FailUserPhone, FailUserPhone.Builder> {
    private static readonly FailUserPhone defaultInstance = new Builder().BuildPartial();
    public static FailUserPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FailUserPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override FailUserPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_FailUserPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FailUserPhone, FailUserPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_FailUserPhone__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int PhoneNumberFieldNumber = 2;
    private bool hasPhoneNumber;
    private string phoneNumber_ = "";
    public bool HasPhoneNumber {
      get { return hasPhoneNumber; }
    }
    public string PhoneNumber {
      get { return phoneNumber_; }
    }
    
    public const int ErrorCodeFieldNumber = 3;
    private bool hasErrorCode;
    private int errorCode_ = 0;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasUserId) {
        output.WriteString(1, UserId);
      }
      if (HasPhoneNumber) {
        output.WriteString(2, PhoneNumber);
      }
      if (HasErrorCode) {
        output.WriteInt32(3, ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasUserId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
        }
        if (HasPhoneNumber) {
          size += pb::CodedOutputStream.ComputeStringSize(2, PhoneNumber);
        }
        if (HasErrorCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrorCode);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FailUserPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FailUserPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FailUserPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FailUserPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FailUserPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FailUserPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FailUserPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FailUserPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FailUserPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FailUserPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FailUserPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<FailUserPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      FailUserPhone result = new FailUserPhone();
      
      protected override FailUserPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new FailUserPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.FailUserPhone.Descriptor; }
      }
      
      public override FailUserPhone DefaultInstanceForType {
        get { return global::DuiContract.FailUserPhone.DefaultInstance; }
      }
      
      public override FailUserPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        FailUserPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FailUserPhone) {
          return MergeFrom((FailUserPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FailUserPhone other) {
        if (other == global::DuiContract.FailUserPhone.DefaultInstance) return this;
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasPhoneNumber) {
          PhoneNumber = other.PhoneNumber;
        }
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              UserId = input.ReadString();
              break;
            }
            case 18: {
              PhoneNumber = input.ReadString();
              break;
            }
            case 24: {
              ErrorCode = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasUserId {
        get { return result.HasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasPhoneNumber {
        get { return result.HasPhoneNumber; }
      }
      public string PhoneNumber {
        get { return result.PhoneNumber; }
        set { SetPhoneNumber(value); }
      }
      public Builder SetPhoneNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPhoneNumber = true;
        result.phoneNumber_ = value;
        return this;
      }
      public Builder ClearPhoneNumber() {
        result.hasPhoneNumber = false;
        result.phoneNumber_ = "";
        return this;
      }
      
      public bool HasErrorCode {
        get { return result.HasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static FailUserPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqFailUserPhone : pb::GeneratedMessage<ReqFailUserPhone, ReqFailUserPhone.Builder> {
    private static readonly ReqFailUserPhone defaultInstance = new Builder().BuildPartial();
    public static ReqFailUserPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqFailUserPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqFailUserPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqFailUserPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqFailUserPhone, ReqFailUserPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqFailUserPhone__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqFailUserPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqFailUserPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqFailUserPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqFailUserPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqFailUserPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqFailUserPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqFailUserPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqFailUserPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqFailUserPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqFailUserPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqFailUserPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqFailUserPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqFailUserPhone result = new ReqFailUserPhone();
      
      protected override ReqFailUserPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqFailUserPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqFailUserPhone.Descriptor; }
      }
      
      public override ReqFailUserPhone DefaultInstanceForType {
        get { return global::DuiContract.ReqFailUserPhone.DefaultInstance; }
      }
      
      public override ReqFailUserPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReqFailUserPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqFailUserPhone) {
          return MergeFrom((ReqFailUserPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqFailUserPhone other) {
        if (other == global::DuiContract.ReqFailUserPhone.DefaultInstance) return this;
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
          }
        }
      }
      
    }
    static ReqFailUserPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspFailUserPhone : pb::GeneratedMessage<RspFailUserPhone, RspFailUserPhone.Builder> {
    private static readonly RspFailUserPhone defaultInstance = new Builder().BuildPartial();
    public static RspFailUserPhone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspFailUserPhone DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspFailUserPhone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspFailUserPhone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspFailUserPhone, RspFailUserPhone.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspFailUserPhone__FieldAccessorTable; }
    }
    
    public const int UserPhoneFieldNumber = 1;
    private pbc::PopsicleList<global::DuiContract.FailUserPhone> userPhone_ = new pbc::PopsicleList<global::DuiContract.FailUserPhone>();
    public scg::IList<global::DuiContract.FailUserPhone> UserPhoneList {
      get { return userPhone_; }
    }
    public int UserPhoneCount {
      get { return userPhone_.Count; }
    }
    public global::DuiContract.FailUserPhone GetUserPhone(int index) {
      return userPhone_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::DuiContract.FailUserPhone element in UserPhoneList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::DuiContract.FailUserPhone element in UserPhoneList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspFailUserPhone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspFailUserPhone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspFailUserPhone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspFailUserPhone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspFailUserPhone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspFailUserPhone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspFailUserPhone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspFailUserPhone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspFailUserPhone ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspFailUserPhone ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspFailUserPhone prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspFailUserPhone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspFailUserPhone result = new RspFailUserPhone();
      
      protected override RspFailUserPhone MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspFailUserPhone();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspFailUserPhone.Descriptor; }
      }
      
      public override RspFailUserPhone DefaultInstanceForType {
        get { return global::DuiContract.RspFailUserPhone.DefaultInstance; }
      }
      
      public override RspFailUserPhone BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.userPhone_.MakeReadOnly();
        RspFailUserPhone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspFailUserPhone) {
          return MergeFrom((RspFailUserPhone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspFailUserPhone other) {
        if (other == global::DuiContract.RspFailUserPhone.DefaultInstance) return this;
        if (other.userPhone_.Count != 0) {
          base.AddRange(other.userPhone_, result.userPhone_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::DuiContract.FailUserPhone.Builder subBuilder = global::DuiContract.FailUserPhone.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddUserPhone(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::DuiContract.FailUserPhone> UserPhoneList {
        get { return result.userPhone_; }
      }
      public int UserPhoneCount {
        get { return result.UserPhoneCount; }
      }
      public global::DuiContract.FailUserPhone GetUserPhone(int index) {
        return result.GetUserPhone(index);
      }
      public Builder SetUserPhone(int index, global::DuiContract.FailUserPhone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.userPhone_[index] = value;
        return this;
      }
      public Builder SetUserPhone(int index, global::DuiContract.FailUserPhone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.userPhone_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserPhone(global::DuiContract.FailUserPhone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.userPhone_.Add(value);
        return this;
      }
      public Builder AddUserPhone(global::DuiContract.FailUserPhone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.userPhone_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserPhone(scg::IEnumerable<global::DuiContract.FailUserPhone> values) {
        base.AddRange(values, result.userPhone_);
        return this;
      }
      public Builder ClearUserPhone() {
        result.userPhone_.Clear();
        return this;
      }
    }
    static RspFailUserPhone() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqSIPRealStatus : pb::GeneratedMessage<ReqSIPRealStatus, ReqSIPRealStatus.Builder> {
    private static readonly ReqSIPRealStatus defaultInstance = new Builder().BuildPartial();
    public static ReqSIPRealStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqSIPRealStatus DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqSIPRealStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqSIPRealStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqSIPRealStatus, ReqSIPRealStatus.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqSIPRealStatus__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqSIPRealStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqSIPRealStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqSIPRealStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqSIPRealStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqSIPRealStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqSIPRealStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqSIPRealStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqSIPRealStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqSIPRealStatus ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqSIPRealStatus ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqSIPRealStatus prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqSIPRealStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqSIPRealStatus result = new ReqSIPRealStatus();
      
      protected override ReqSIPRealStatus MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqSIPRealStatus();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqSIPRealStatus.Descriptor; }
      }
      
      public override ReqSIPRealStatus DefaultInstanceForType {
        get { return global::DuiContract.ReqSIPRealStatus.DefaultInstance; }
      }
      
      public override ReqSIPRealStatus BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReqSIPRealStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqSIPRealStatus) {
          return MergeFrom((ReqSIPRealStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqSIPRealStatus other) {
        if (other == global::DuiContract.ReqSIPRealStatus.DefaultInstance) return this;
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
          }
        }
      }
      
    }
    static ReqSIPRealStatus() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class SIPRealStatus : pb::GeneratedMessage<SIPRealStatus, SIPRealStatus.Builder> {
    private static readonly SIPRealStatus defaultInstance = new Builder().BuildPartial();
    public static SIPRealStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SIPRealStatus DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SIPRealStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_SIPRealStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SIPRealStatus, SIPRealStatus.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_SIPRealStatus__FieldAccessorTable; }
    }
    
    public const int LinkNoFieldNumber = 1;
    private bool hasLinkNo;
    private string linkNo_ = "";
    public bool HasLinkNo {
      get { return hasLinkNo; }
    }
    public string LinkNo {
      get { return linkNo_; }
    }
    
    public const int SIPFieldNumber = 2;
    private bool hasSIP;
    private string sIP_ = "";
    public bool HasSIP {
      get { return hasSIP; }
    }
    public string SIP {
      get { return sIP_; }
    }
    
    public const int IsPausedFieldNumber = 3;
    private bool hasIsPaused;
    private bool isPaused_ = false;
    public bool HasIsPaused {
      get { return hasIsPaused; }
    }
    public bool IsPaused {
      get { return isPaused_; }
    }
    
    public const int StatusFieldNumber = 4;
    private bool hasStatus;
    private int status_ = 0;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public const int UpTimeFieldNumber = 5;
    private bool hasUpTime;
    private string upTime_ = "";
    public bool HasUpTime {
      get { return hasUpTime; }
    }
    public string UpTime {
      get { return upTime_; }
    }
    
    public const int PhoneFieldNumber = 6;
    private bool hasPhone;
    private string phone_ = "";
    public bool HasPhone {
      get { return hasPhone; }
    }
    public string Phone {
      get { return phone_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasLinkNo) {
        output.WriteString(1, LinkNo);
      }
      if (HasSIP) {
        output.WriteString(2, SIP);
      }
      if (HasIsPaused) {
        output.WriteBool(3, IsPaused);
      }
      if (HasStatus) {
        output.WriteInt32(4, Status);
      }
      if (HasUpTime) {
        output.WriteString(5, UpTime);
      }
      if (HasPhone) {
        output.WriteString(6, Phone);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasLinkNo) {
          size += pb::CodedOutputStream.ComputeStringSize(1, LinkNo);
        }
        if (HasSIP) {
          size += pb::CodedOutputStream.ComputeStringSize(2, SIP);
        }
        if (HasIsPaused) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsPaused);
        }
        if (HasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Status);
        }
        if (HasUpTime) {
          size += pb::CodedOutputStream.ComputeStringSize(5, UpTime);
        }
        if (HasPhone) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Phone);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SIPRealStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SIPRealStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SIPRealStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SIPRealStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SIPRealStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SIPRealStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SIPRealStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SIPRealStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SIPRealStatus ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SIPRealStatus ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SIPRealStatus prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<SIPRealStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SIPRealStatus result = new SIPRealStatus();
      
      protected override SIPRealStatus MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SIPRealStatus();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.SIPRealStatus.Descriptor; }
      }
      
      public override SIPRealStatus DefaultInstanceForType {
        get { return global::DuiContract.SIPRealStatus.DefaultInstance; }
      }
      
      public override SIPRealStatus BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SIPRealStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SIPRealStatus) {
          return MergeFrom((SIPRealStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SIPRealStatus other) {
        if (other == global::DuiContract.SIPRealStatus.DefaultInstance) return this;
        if (other.HasLinkNo) {
          LinkNo = other.LinkNo;
        }
        if (other.HasSIP) {
          SIP = other.SIP;
        }
        if (other.HasIsPaused) {
          IsPaused = other.IsPaused;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasUpTime) {
          UpTime = other.UpTime;
        }
        if (other.HasPhone) {
          Phone = other.Phone;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              LinkNo = input.ReadString();
              break;
            }
            case 18: {
              SIP = input.ReadString();
              break;
            }
            case 24: {
              IsPaused = input.ReadBool();
              break;
            }
            case 32: {
              Status = input.ReadInt32();
              break;
            }
            case 42: {
              UpTime = input.ReadString();
              break;
            }
            case 50: {
              Phone = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasLinkNo {
        get { return result.HasLinkNo; }
      }
      public string LinkNo {
        get { return result.LinkNo; }
        set { SetLinkNo(value); }
      }
      public Builder SetLinkNo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasLinkNo = true;
        result.linkNo_ = value;
        return this;
      }
      public Builder ClearLinkNo() {
        result.hasLinkNo = false;
        result.linkNo_ = "";
        return this;
      }
      
      public bool HasSIP {
        get { return result.HasSIP; }
      }
      public string SIP {
        get { return result.SIP; }
        set { SetSIP(value); }
      }
      public Builder SetSIP(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSIP = true;
        result.sIP_ = value;
        return this;
      }
      public Builder ClearSIP() {
        result.hasSIP = false;
        result.sIP_ = "";
        return this;
      }
      
      public bool HasIsPaused {
        get { return result.HasIsPaused; }
      }
      public bool IsPaused {
        get { return result.IsPaused; }
        set { SetIsPaused(value); }
      }
      public Builder SetIsPaused(bool value) {
        result.hasIsPaused = true;
        result.isPaused_ = value;
        return this;
      }
      public Builder ClearIsPaused() {
        result.hasIsPaused = false;
        result.isPaused_ = false;
        return this;
      }
      
      public bool HasStatus {
        get { return result.HasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasUpTime {
        get { return result.HasUpTime; }
      }
      public string UpTime {
        get { return result.UpTime; }
        set { SetUpTime(value); }
      }
      public Builder SetUpTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasUpTime = true;
        result.upTime_ = value;
        return this;
      }
      public Builder ClearUpTime() {
        result.hasUpTime = false;
        result.upTime_ = "";
        return this;
      }
      
      public bool HasPhone {
        get { return result.HasPhone; }
      }
      public string Phone {
        get { return result.Phone; }
        set { SetPhone(value); }
      }
      public Builder SetPhone(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPhone = true;
        result.phone_ = value;
        return this;
      }
      public Builder ClearPhone() {
        result.hasPhone = false;
        result.phone_ = "";
        return this;
      }
    }
    static SIPRealStatus() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspSIPRealStatus : pb::GeneratedMessage<RspSIPRealStatus, RspSIPRealStatus.Builder> {
    private static readonly RspSIPRealStatus defaultInstance = new Builder().BuildPartial();
    public static RspSIPRealStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspSIPRealStatus DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspSIPRealStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspSIPRealStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspSIPRealStatus, RspSIPRealStatus.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspSIPRealStatus__FieldAccessorTable; }
    }
    
    public const int RealStatusFieldNumber = 1;
    private pbc::PopsicleList<global::DuiContract.SIPRealStatus> realStatus_ = new pbc::PopsicleList<global::DuiContract.SIPRealStatus>();
    public scg::IList<global::DuiContract.SIPRealStatus> RealStatusList {
      get { return realStatus_; }
    }
    public int RealStatusCount {
      get { return realStatus_.Count; }
    }
    public global::DuiContract.SIPRealStatus GetRealStatus(int index) {
      return realStatus_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::DuiContract.SIPRealStatus element in RealStatusList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::DuiContract.SIPRealStatus element in RealStatusList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspSIPRealStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspSIPRealStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspSIPRealStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspSIPRealStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspSIPRealStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspSIPRealStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspSIPRealStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspSIPRealStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspSIPRealStatus ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspSIPRealStatus ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspSIPRealStatus prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspSIPRealStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspSIPRealStatus result = new RspSIPRealStatus();
      
      protected override RspSIPRealStatus MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspSIPRealStatus();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspSIPRealStatus.Descriptor; }
      }
      
      public override RspSIPRealStatus DefaultInstanceForType {
        get { return global::DuiContract.RspSIPRealStatus.DefaultInstance; }
      }
      
      public override RspSIPRealStatus BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.realStatus_.MakeReadOnly();
        RspSIPRealStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspSIPRealStatus) {
          return MergeFrom((RspSIPRealStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspSIPRealStatus other) {
        if (other == global::DuiContract.RspSIPRealStatus.DefaultInstance) return this;
        if (other.realStatus_.Count != 0) {
          base.AddRange(other.realStatus_, result.realStatus_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::DuiContract.SIPRealStatus.Builder subBuilder = global::DuiContract.SIPRealStatus.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddRealStatus(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::DuiContract.SIPRealStatus> RealStatusList {
        get { return result.realStatus_; }
      }
      public int RealStatusCount {
        get { return result.RealStatusCount; }
      }
      public global::DuiContract.SIPRealStatus GetRealStatus(int index) {
        return result.GetRealStatus(index);
      }
      public Builder SetRealStatus(int index, global::DuiContract.SIPRealStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.realStatus_[index] = value;
        return this;
      }
      public Builder SetRealStatus(int index, global::DuiContract.SIPRealStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.realStatus_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRealStatus(global::DuiContract.SIPRealStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.realStatus_.Add(value);
        return this;
      }
      public Builder AddRealStatus(global::DuiContract.SIPRealStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.realStatus_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRealStatus(scg::IEnumerable<global::DuiContract.SIPRealStatus> values) {
        base.AddRange(values, result.realStatus_);
        return this;
      }
      public Builder ClearRealStatus() {
        result.realStatus_.Clear();
        return this;
      }
    }
    static RspSIPRealStatus() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class ReqOtherCompanyImp : pb::GeneratedMessage<ReqOtherCompanyImp, ReqOtherCompanyImp.Builder> {
    private static readonly ReqOtherCompanyImp defaultInstance = new Builder().BuildPartial();
    public static ReqOtherCompanyImp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReqOtherCompanyImp DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ReqOtherCompanyImp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqOtherCompanyImp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReqOtherCompanyImp, ReqOtherCompanyImp.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_ReqOtherCompanyImp__FieldAccessorTable; }
    }
    
    public const int ReqCompanyIdFieldNumber = 1;
    private bool hasReqCompanyId;
    private string reqCompanyId_ = "";
    public bool HasReqCompanyId {
      get { return hasReqCompanyId; }
    }
    public string ReqCompanyId {
      get { return reqCompanyId_; }
    }
    
    public const int RspCompanyIdFieldNumber = 2;
    private bool hasRspCompanyId;
    private string rspCompanyId_ = "";
    public bool HasRspCompanyId {
      get { return hasRspCompanyId; }
    }
    public string RspCompanyId {
      get { return rspCompanyId_; }
    }
    
    public const int SessionIdFieldNumber = 3;
    private bool hasSessionId;
    private string sessionId_ = "";
    public bool HasSessionId {
      get { return hasSessionId; }
    }
    public string SessionId {
      get { return sessionId_; }
    }
    
    public const int ReqBodyFieldNumber = 4;
    private bool hasReqBody;
    private global::DuiContract.RequestBase reqBody_ = global::DuiContract.RequestBase.DefaultInstance;
    public bool HasReqBody {
      get { return hasReqBody; }
    }
    public global::DuiContract.RequestBase ReqBody {
      get { return reqBody_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasReqBody) {
          if (!ReqBody.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasReqCompanyId) {
        output.WriteString(1, ReqCompanyId);
      }
      if (HasRspCompanyId) {
        output.WriteString(2, RspCompanyId);
      }
      if (HasSessionId) {
        output.WriteString(3, SessionId);
      }
      if (HasReqBody) {
        output.WriteMessage(4, ReqBody);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasReqCompanyId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ReqCompanyId);
        }
        if (HasRspCompanyId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RspCompanyId);
        }
        if (HasSessionId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, SessionId);
        }
        if (HasReqBody) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ReqBody);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReqOtherCompanyImp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqOtherCompanyImp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqOtherCompanyImp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReqOtherCompanyImp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReqOtherCompanyImp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqOtherCompanyImp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReqOtherCompanyImp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReqOtherCompanyImp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReqOtherCompanyImp ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReqOtherCompanyImp ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReqOtherCompanyImp prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ReqOtherCompanyImp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ReqOtherCompanyImp result = new ReqOtherCompanyImp();
      
      protected override ReqOtherCompanyImp MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ReqOtherCompanyImp();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.ReqOtherCompanyImp.Descriptor; }
      }
      
      public override ReqOtherCompanyImp DefaultInstanceForType {
        get { return global::DuiContract.ReqOtherCompanyImp.DefaultInstance; }
      }
      
      public override ReqOtherCompanyImp BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ReqOtherCompanyImp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReqOtherCompanyImp) {
          return MergeFrom((ReqOtherCompanyImp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReqOtherCompanyImp other) {
        if (other == global::DuiContract.ReqOtherCompanyImp.DefaultInstance) return this;
        if (other.HasReqCompanyId) {
          ReqCompanyId = other.ReqCompanyId;
        }
        if (other.HasRspCompanyId) {
          RspCompanyId = other.RspCompanyId;
        }
        if (other.HasSessionId) {
          SessionId = other.SessionId;
        }
        if (other.HasReqBody) {
          MergeReqBody(other.ReqBody);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              ReqCompanyId = input.ReadString();
              break;
            }
            case 18: {
              RspCompanyId = input.ReadString();
              break;
            }
            case 26: {
              SessionId = input.ReadString();
              break;
            }
            case 34: {
              global::DuiContract.RequestBase.Builder subBuilder = global::DuiContract.RequestBase.CreateBuilder();
              if (HasReqBody) {
                subBuilder.MergeFrom(ReqBody);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReqBody = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasReqCompanyId {
        get { return result.HasReqCompanyId; }
      }
      public string ReqCompanyId {
        get { return result.ReqCompanyId; }
        set { SetReqCompanyId(value); }
      }
      public Builder SetReqCompanyId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReqCompanyId = true;
        result.reqCompanyId_ = value;
        return this;
      }
      public Builder ClearReqCompanyId() {
        result.hasReqCompanyId = false;
        result.reqCompanyId_ = "";
        return this;
      }
      
      public bool HasRspCompanyId {
        get { return result.HasRspCompanyId; }
      }
      public string RspCompanyId {
        get { return result.RspCompanyId; }
        set { SetRspCompanyId(value); }
      }
      public Builder SetRspCompanyId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasRspCompanyId = true;
        result.rspCompanyId_ = value;
        return this;
      }
      public Builder ClearRspCompanyId() {
        result.hasRspCompanyId = false;
        result.rspCompanyId_ = "";
        return this;
      }
      
      public bool HasSessionId {
        get { return result.HasSessionId; }
      }
      public string SessionId {
        get { return result.SessionId; }
        set { SetSessionId(value); }
      }
      public Builder SetSessionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSessionId = true;
        result.sessionId_ = value;
        return this;
      }
      public Builder ClearSessionId() {
        result.hasSessionId = false;
        result.sessionId_ = "";
        return this;
      }
      
      public bool HasReqBody {
       get { return result.HasReqBody; }
      }
      public global::DuiContract.RequestBase ReqBody {
        get { return result.ReqBody; }
        set { SetReqBody(value); }
      }
      public Builder SetReqBody(global::DuiContract.RequestBase value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasReqBody = true;
        result.reqBody_ = value;
        return this;
      }
      public Builder SetReqBody(global::DuiContract.RequestBase.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasReqBody = true;
        result.reqBody_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReqBody(global::DuiContract.RequestBase value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasReqBody &&
            result.reqBody_ != global::DuiContract.RequestBase.DefaultInstance) {
            result.reqBody_ = global::DuiContract.RequestBase.CreateBuilder(result.reqBody_).MergeFrom(value).BuildPartial();
        } else {
          result.reqBody_ = value;
        }
        result.hasReqBody = true;
        return this;
      }
      public Builder ClearReqBody() {
        result.hasReqBody = false;
        result.reqBody_ = global::DuiContract.RequestBase.DefaultInstance;
        return this;
      }
    }
    static ReqOtherCompanyImp() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspOtherCompanyImp : pb::GeneratedMessage<RspOtherCompanyImp, RspOtherCompanyImp.Builder> {
    private static readonly RspOtherCompanyImp defaultInstance = new Builder().BuildPartial();
    public static RspOtherCompanyImp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspOtherCompanyImp DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspOtherCompanyImp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspOtherCompanyImp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspOtherCompanyImp, RspOtherCompanyImp.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspOtherCompanyImp__FieldAccessorTable; }
    }
    
    public const int CompanyIdFieldNumber = 1;
    private bool hasCompanyId;
    private string companyId_ = "";
    public bool HasCompanyId {
      get { return hasCompanyId; }
    }
    public string CompanyId {
      get { return companyId_; }
    }
    
    public const int SessionIdFieldNumber = 2;
    private bool hasSessionId;
    private string sessionId_ = "";
    public bool HasSessionId {
      get { return hasSessionId; }
    }
    public string SessionId {
      get { return sessionId_; }
    }
    
    public const int RspBodyFieldNumber = 3;
    private bool hasRspBody;
    private global::DuiContract.ResponseBase rspBody_ = global::DuiContract.ResponseBase.DefaultInstance;
    public bool HasRspBody {
      get { return hasRspBody; }
    }
    public global::DuiContract.ResponseBase RspBody {
      get { return rspBody_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasRspBody) {
          if (!RspBody.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasCompanyId) {
        output.WriteString(1, CompanyId);
      }
      if (HasSessionId) {
        output.WriteString(2, SessionId);
      }
      if (HasRspBody) {
        output.WriteMessage(3, RspBody);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasCompanyId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, CompanyId);
        }
        if (HasSessionId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, SessionId);
        }
        if (HasRspBody) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, RspBody);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspOtherCompanyImp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspOtherCompanyImp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspOtherCompanyImp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspOtherCompanyImp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspOtherCompanyImp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspOtherCompanyImp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspOtherCompanyImp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspOtherCompanyImp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspOtherCompanyImp ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspOtherCompanyImp ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspOtherCompanyImp prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspOtherCompanyImp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspOtherCompanyImp result = new RspOtherCompanyImp();
      
      protected override RspOtherCompanyImp MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspOtherCompanyImp();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspOtherCompanyImp.Descriptor; }
      }
      
      public override RspOtherCompanyImp DefaultInstanceForType {
        get { return global::DuiContract.RspOtherCompanyImp.DefaultInstance; }
      }
      
      public override RspOtherCompanyImp BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RspOtherCompanyImp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspOtherCompanyImp) {
          return MergeFrom((RspOtherCompanyImp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspOtherCompanyImp other) {
        if (other == global::DuiContract.RspOtherCompanyImp.DefaultInstance) return this;
        if (other.HasCompanyId) {
          CompanyId = other.CompanyId;
        }
        if (other.HasSessionId) {
          SessionId = other.SessionId;
        }
        if (other.HasRspBody) {
          MergeRspBody(other.RspBody);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              CompanyId = input.ReadString();
              break;
            }
            case 18: {
              SessionId = input.ReadString();
              break;
            }
            case 26: {
              global::DuiContract.ResponseBase.Builder subBuilder = global::DuiContract.ResponseBase.CreateBuilder();
              if (HasRspBody) {
                subBuilder.MergeFrom(RspBody);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RspBody = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasCompanyId {
        get { return result.HasCompanyId; }
      }
      public string CompanyId {
        get { return result.CompanyId; }
        set { SetCompanyId(value); }
      }
      public Builder SetCompanyId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCompanyId = true;
        result.companyId_ = value;
        return this;
      }
      public Builder ClearCompanyId() {
        result.hasCompanyId = false;
        result.companyId_ = "";
        return this;
      }
      
      public bool HasSessionId {
        get { return result.HasSessionId; }
      }
      public string SessionId {
        get { return result.SessionId; }
        set { SetSessionId(value); }
      }
      public Builder SetSessionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSessionId = true;
        result.sessionId_ = value;
        return this;
      }
      public Builder ClearSessionId() {
        result.hasSessionId = false;
        result.sessionId_ = "";
        return this;
      }
      
      public bool HasRspBody {
       get { return result.HasRspBody; }
      }
      public global::DuiContract.ResponseBase RspBody {
        get { return result.RspBody; }
        set { SetRspBody(value); }
      }
      public Builder SetRspBody(global::DuiContract.ResponseBase value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasRspBody = true;
        result.rspBody_ = value;
        return this;
      }
      public Builder SetRspBody(global::DuiContract.ResponseBase.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasRspBody = true;
        result.rspBody_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRspBody(global::DuiContract.ResponseBase value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasRspBody &&
            result.rspBody_ != global::DuiContract.ResponseBase.DefaultInstance) {
            result.rspBody_ = global::DuiContract.ResponseBase.CreateBuilder(result.rspBody_).MergeFrom(value).BuildPartial();
        } else {
          result.rspBody_ = value;
        }
        result.hasRspBody = true;
        return this;
      }
      public Builder ClearRspBody() {
        result.hasRspBody = false;
        result.rspBody_ = global::DuiContract.ResponseBase.DefaultInstance;
        return this;
      }
    }
    static RspOtherCompanyImp() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  public sealed partial class RspHeartbeats : pb::GeneratedMessage<RspHeartbeats, RspHeartbeats.Builder> {
    private static readonly RspHeartbeats defaultInstance = new Builder().BuildPartial();
    public static RspHeartbeats DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RspHeartbeats DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override RspHeartbeats ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspHeartbeats__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RspHeartbeats, RspHeartbeats.Builder> InternalFieldAccessors {
      get { return global::DuiContract.ECallModel.internal__static_DuiContract_RspHeartbeats__FieldAccessorTable; }
    }
    
    public const int TicksFieldNumber = 1;
    private bool hasTicks;
    private int ticks_ = 0;
    public bool HasTicks {
      get { return hasTicks; }
    }
    public int Ticks {
      get { return ticks_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasTicks) {
        output.WriteInt32(1, Ticks);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasTicks) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Ticks);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RspHeartbeats ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspHeartbeats ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspHeartbeats ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RspHeartbeats ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RspHeartbeats ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspHeartbeats ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RspHeartbeats ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RspHeartbeats ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RspHeartbeats ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RspHeartbeats ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RspHeartbeats prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<RspHeartbeats, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      RspHeartbeats result = new RspHeartbeats();
      
      protected override RspHeartbeats MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new RspHeartbeats();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DuiContract.RspHeartbeats.Descriptor; }
      }
      
      public override RspHeartbeats DefaultInstanceForType {
        get { return global::DuiContract.RspHeartbeats.DefaultInstance; }
      }
      
      public override RspHeartbeats BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        RspHeartbeats returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RspHeartbeats) {
          return MergeFrom((RspHeartbeats) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RspHeartbeats other) {
        if (other == global::DuiContract.RspHeartbeats.DefaultInstance) return this;
        if (other.HasTicks) {
          Ticks = other.Ticks;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Ticks = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasTicks {
        get { return result.HasTicks; }
      }
      public int Ticks {
        get { return result.Ticks; }
        set { SetTicks(value); }
      }
      public Builder SetTicks(int value) {
        result.hasTicks = true;
        result.ticks_ = value;
        return this;
      }
      public Builder ClearTicks() {
        result.hasTicks = false;
        result.ticks_ = 0;
        return this;
      }
    }
    static RspHeartbeats() {
      object.ReferenceEquals(global::DuiContract.ECallModel.Descriptor, null);
    }
  }
  
  #endregion
  
}
